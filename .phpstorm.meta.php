<?php
/* @noinspection ALL */
// @formatter:off
// phpcs:ignoreFile

namespace PHPSTORM_META {

   /**
    * PhpStorm Meta file, to provide autocomplete information for PhpStorm
    *
    * @author Barry vd. Heuvel <barryvdh@gmail.com>
    * @see https://github.com/barryvdh/laravel-ide-helper
    */
    override(new \Illuminate\Contracts\Container\Container, map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Container\Container::makeWith(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::get(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::make(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::makeWith(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::get(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::make(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::makeWith(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\app(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\resolve(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Psr\Container\ContainerInterface::get(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LoginViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\RegisterViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\RequestPasswordResetLinkViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Jetstream\Contracts\DeletesUsers' => \App\Actions\Jetstream\DeleteUser::class,
            'Spatie\Permission\Contracts\Permission' => \Spatie\Permission\Models\Permission::class,
            'Spatie\Permission\Contracts\Role' => \Spatie\Permission\Models\Role::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.debugbar.clear' => \Barryvdh\Debugbar\Console\ClearCommand::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));

    override(\auth()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Contracts\Auth\Guard::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Auth::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\request()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Http\Request::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Request::user(), map([
        '' => \App\Models\User::class,
    ]));

    override(\config(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.sanctum.driver' => 'string',
            'auth.guards.sanctum.provider' => 'NULL',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.prefix' => 'string',
            'country.fr.AF' => 'string',
            'country.fr.ZA' => 'string',
            'country.fr.AL' => 'string',
            'country.fr.DZ' => 'string',
            'country.fr.DE' => 'string',
            'country.fr.AD' => 'string',
            'country.fr.AO' => 'string',
            'country.fr.AI' => 'string',
            'country.fr.AQ' => 'string',
            'country.fr.AG' => 'string',
            'country.fr.SA' => 'string',
            'country.fr.AR' => 'string',
            'country.fr.AM' => 'string',
            'country.fr.AW' => 'string',
            'country.fr.AU' => 'string',
            'country.fr.AT' => 'string',
            'country.fr.AZ' => 'string',
            'country.fr.BS' => 'string',
            'country.fr.BH' => 'string',
            'country.fr.BD' => 'string',
            'country.fr.BB' => 'string',
            'country.fr.BE' => 'string',
            'country.fr.BZ' => 'string',
            'country.fr.BJ' => 'string',
            'country.fr.BM' => 'string',
            'country.fr.BT' => 'string',
            'country.fr.BY' => 'string',
            'country.fr.BO' => 'string',
            'country.fr.BA' => 'string',
            'country.fr.BW' => 'string',
            'country.fr.BR' => 'string',
            'country.fr.BN' => 'string',
            'country.fr.BG' => 'string',
            'country.fr.BF' => 'string',
            'country.fr.BI' => 'string',
            'country.fr.KH' => 'string',
            'country.fr.CM' => 'string',
            'country.fr.CA' => 'string',
            'country.fr.CV' => 'string',
            'country.fr.CL' => 'string',
            'country.fr.CN' => 'string',
            'country.fr.CY' => 'string',
            'country.fr.CO' => 'string',
            'country.fr.KM' => 'string',
            'country.fr.CG' => 'string',
            'country.fr.CD' => 'string',
            'country.fr.KP' => 'string',
            'country.fr.KR' => 'string',
            'country.fr.CR' => 'string',
            'country.fr.CI' => 'string',
            'country.fr.HR' => 'string',
            'country.fr.CU' => 'string',
            'country.fr.CW' => 'string',
            'country.fr.DK' => 'string',
            'country.fr.DJ' => 'string',
            'country.fr.DM' => 'string',
            'country.fr.EG' => 'string',
            'country.fr.AE' => 'string',
            'country.fr.EC' => 'string',
            'country.fr.ER' => 'string',
            'country.fr.ES' => 'string',
            'country.fr.EE' => 'string',
            'country.fr.SZ' => 'string',
            'country.fr.VA' => 'string',
            'country.fr.FM' => 'string',
            'country.fr.US' => 'string',
            'country.fr.ET' => 'string',
            'country.fr.FJ' => 'string',
            'country.fr.FI' => 'string',
            'country.fr.FR' => 'string',
            'country.fr.GA' => 'string',
            'country.fr.GM' => 'string',
            'country.fr.GE' => 'string',
            'country.fr.GS' => 'string',
            'country.fr.GH' => 'string',
            'country.fr.GI' => 'string',
            'country.fr.GR' => 'string',
            'country.fr.GD' => 'string',
            'country.fr.GL' => 'string',
            'country.fr.GP' => 'string',
            'country.fr.GU' => 'string',
            'country.fr.GT' => 'string',
            'country.fr.GG' => 'string',
            'country.fr.GN' => 'string',
            'country.fr.GQ' => 'string',
            'country.fr.GW' => 'string',
            'country.fr.GY' => 'string',
            'country.fr.GF' => 'string',
            'country.fr.HT' => 'string',
            'country.fr.HN' => 'string',
            'country.fr.HU' => 'string',
            'country.fr.BV' => 'string',
            'country.fr.CX' => 'string',
            'country.fr.IM' => 'string',
            'country.fr.NF' => 'string',
            'country.fr.AX' => 'string',
            'country.fr.KY' => 'string',
            'country.fr.CC' => 'string',
            'country.fr.CK' => 'string',
            'country.fr.FO' => 'string',
            'country.fr.HM' => 'string',
            'country.fr.FK' => 'string',
            'country.fr.MP' => 'string',
            'country.fr.MH' => 'string',
            'country.fr.UM' => 'string',
            'country.fr.PN' => 'string',
            'country.fr.SB' => 'string',
            'country.fr.TC' => 'string',
            'country.fr.VG' => 'string',
            'country.fr.VI' => 'string',
            'country.fr.IN' => 'string',
            'country.fr.ID' => 'string',
            'country.fr.IQ' => 'string',
            'country.fr.IR' => 'string',
            'country.fr.IE' => 'string',
            'country.fr.IS' => 'string',
            'country.fr.IL' => 'string',
            'country.fr.IT' => 'string',
            'country.fr.JM' => 'string',
            'country.fr.JP' => 'string',
            'country.fr.JE' => 'string',
            'country.fr.JO' => 'string',
            'country.fr.KZ' => 'string',
            'country.fr.KE' => 'string',
            'country.fr.KG' => 'string',
            'country.fr.KI' => 'string',
            'country.fr.KW' => 'string',
            'country.fr.RE' => 'string',
            'country.fr.LA' => 'string',
            'country.fr.LS' => 'string',
            'country.fr.LV' => 'string',
            'country.fr.LB' => 'string',
            'country.fr.LR' => 'string',
            'country.fr.LY' => 'string',
            'country.fr.LI' => 'string',
            'country.fr.LT' => 'string',
            'country.fr.LU' => 'string',
            'country.fr.MK' => 'string',
            'country.fr.MG' => 'string',
            'country.fr.MY' => 'string',
            'country.fr.MW' => 'string',
            'country.fr.MV' => 'string',
            'country.fr.ML' => 'string',
            'country.fr.MT' => 'string',
            'country.fr.MA' => 'string',
            'country.fr.MQ' => 'string',
            'country.fr.MU' => 'string',
            'country.fr.MR' => 'string',
            'country.fr.YT' => 'string',
            'country.fr.MX' => 'string',
            'country.fr.MD' => 'string',
            'country.fr.MC' => 'string',
            'country.fr.MN' => 'string',
            'country.fr.ME' => 'string',
            'country.fr.MS' => 'string',
            'country.fr.MZ' => 'string',
            'country.fr.MM' => 'string',
            'country.fr.NA' => 'string',
            'country.fr.NR' => 'string',
            'country.fr.NP' => 'string',
            'country.fr.NI' => 'string',
            'country.fr.NE' => 'string',
            'country.fr.NG' => 'string',
            'country.fr.NU' => 'string',
            'country.fr.NO' => 'string',
            'country.fr.NC' => 'string',
            'country.fr.NZ' => 'string',
            'country.fr.OM' => 'string',
            'country.fr.UG' => 'string',
            'country.fr.UZ' => 'string',
            'country.fr.PK' => 'string',
            'country.fr.PW' => 'string',
            'country.fr.PA' => 'string',
            'country.fr.PG' => 'string',
            'country.fr.PY' => 'string',
            'country.fr.NL' => 'string',
            'country.fr.BQ' => 'string',
            'country.fr.PE' => 'string',
            'country.fr.PH' => 'string',
            'country.fr.PL' => 'string',
            'country.fr.PF' => 'string',
            'country.fr.PR' => 'string',
            'country.fr.PT' => 'string',
            'country.fr.QA' => 'string',
            'country.fr.HK' => 'string',
            'country.fr.MO' => 'string',
            'country.fr.CF' => 'string',
            'country.fr.DO' => 'string',
            'country.fr.RO' => 'string',
            'country.fr.GB' => 'string',
            'country.fr.RU' => 'string',
            'country.fr.RW' => 'string',
            'country.fr.EH' => 'string',
            'country.fr.BL' => 'string',
            'country.fr.KN' => 'string',
            'country.fr.SM' => 'string',
            'country.fr.MF' => 'string',
            'country.fr.SX' => 'string',
            'country.fr.PM' => 'string',
            'country.fr.VC' => 'string',
            'country.fr.SH' => 'string',
            'country.fr.LC' => 'string',
            'country.fr.SV' => 'string',
            'country.fr.WS' => 'string',
            'country.fr.AS' => 'string',
            'country.fr.ST' => 'string',
            'country.fr.SN' => 'string',
            'country.fr.RS' => 'string',
            'country.fr.SC' => 'string',
            'country.fr.SL' => 'string',
            'country.fr.SG' => 'string',
            'country.fr.SK' => 'string',
            'country.fr.SI' => 'string',
            'country.fr.SO' => 'string',
            'country.fr.SD' => 'string',
            'country.fr.SS' => 'string',
            'country.fr.LK' => 'string',
            'country.fr.SE' => 'string',
            'country.fr.CH' => 'string',
            'country.fr.SR' => 'string',
            'country.fr.SJ' => 'string',
            'country.fr.SY' => 'string',
            'country.fr.TJ' => 'string',
            'country.fr.TW' => 'string',
            'country.fr.TZ' => 'string',
            'country.fr.TD' => 'string',
            'country.fr.CZ' => 'string',
            'country.fr.TF' => 'string',
            'country.fr.IO' => 'string',
            'country.fr.PS' => 'string',
            'country.fr.TH' => 'string',
            'country.fr.TL' => 'string',
            'country.fr.TG' => 'string',
            'country.fr.TK' => 'string',
            'country.fr.TO' => 'string',
            'country.fr.TT' => 'string',
            'country.fr.TN' => 'string',
            'country.fr.TM' => 'string',
            'country.fr.TR' => 'string',
            'country.fr.TV' => 'string',
            'country.fr.UA' => 'string',
            'country.fr.UY' => 'string',
            'country.fr.VU' => 'string',
            'country.fr.VE' => 'string',
            'country.fr.VN' => 'string',
            'country.fr.WF' => 'string',
            'country.fr.YE' => 'string',
            'country.fr.ZM' => 'string',
            'country.fr.ZW' => 'string',
            'country.en.AF' => 'string',
            'country.en.AX' => 'string',
            'country.en.AL' => 'string',
            'country.en.DZ' => 'string',
            'country.en.AS' => 'string',
            'country.en.AD' => 'string',
            'country.en.AO' => 'string',
            'country.en.AI' => 'string',
            'country.en.AQ' => 'string',
            'country.en.AG' => 'string',
            'country.en.AR' => 'string',
            'country.en.AM' => 'string',
            'country.en.AW' => 'string',
            'country.en.AU' => 'string',
            'country.en.AT' => 'string',
            'country.en.AZ' => 'string',
            'country.en.BS' => 'string',
            'country.en.BH' => 'string',
            'country.en.BD' => 'string',
            'country.en.BB' => 'string',
            'country.en.BY' => 'string',
            'country.en.BE' => 'string',
            'country.en.BZ' => 'string',
            'country.en.BJ' => 'string',
            'country.en.BM' => 'string',
            'country.en.BT' => 'string',
            'country.en.BO' => 'string',
            'country.en.BA' => 'string',
            'country.en.BW' => 'string',
            'country.en.BV' => 'string',
            'country.en.BR' => 'string',
            'country.en.IO' => 'string',
            'country.en.VG' => 'string',
            'country.en.BN' => 'string',
            'country.en.BG' => 'string',
            'country.en.BF' => 'string',
            'country.en.BI' => 'string',
            'country.en.KH' => 'string',
            'country.en.CM' => 'string',
            'country.en.CA' => 'string',
            'country.en.CV' => 'string',
            'country.en.BQ' => 'string',
            'country.en.KY' => 'string',
            'country.en.CF' => 'string',
            'country.en.TD' => 'string',
            'country.en.CL' => 'string',
            'country.en.CN' => 'string',
            'country.en.CX' => 'string',
            'country.en.CC' => 'string',
            'country.en.CO' => 'string',
            'country.en.KM' => 'string',
            'country.en.CG' => 'string',
            'country.en.CD' => 'string',
            'country.en.CK' => 'string',
            'country.en.CR' => 'string',
            'country.en.CI' => 'string',
            'country.en.HR' => 'string',
            'country.en.CU' => 'string',
            'country.en.CW' => 'string',
            'country.en.CY' => 'string',
            'country.en.CZ' => 'string',
            'country.en.DK' => 'string',
            'country.en.DJ' => 'string',
            'country.en.DM' => 'string',
            'country.en.DO' => 'string',
            'country.en.EC' => 'string',
            'country.en.EG' => 'string',
            'country.en.SV' => 'string',
            'country.en.GQ' => 'string',
            'country.en.ER' => 'string',
            'country.en.EE' => 'string',
            'country.en.SZ' => 'string',
            'country.en.ET' => 'string',
            'country.en.FK' => 'string',
            'country.en.FO' => 'string',
            'country.en.FJ' => 'string',
            'country.en.FI' => 'string',
            'country.en.FR' => 'string',
            'country.en.GF' => 'string',
            'country.en.PF' => 'string',
            'country.en.TF' => 'string',
            'country.en.GA' => 'string',
            'country.en.GM' => 'string',
            'country.en.GE' => 'string',
            'country.en.DE' => 'string',
            'country.en.GH' => 'string',
            'country.en.GI' => 'string',
            'country.en.GR' => 'string',
            'country.en.GL' => 'string',
            'country.en.GD' => 'string',
            'country.en.GP' => 'string',
            'country.en.GU' => 'string',
            'country.en.GT' => 'string',
            'country.en.GG' => 'string',
            'country.en.GN' => 'string',
            'country.en.GW' => 'string',
            'country.en.GY' => 'string',
            'country.en.HT' => 'string',
            'country.en.HM' => 'string',
            'country.en.HN' => 'string',
            'country.en.HK' => 'string',
            'country.en.HU' => 'string',
            'country.en.IS' => 'string',
            'country.en.IN' => 'string',
            'country.en.ID' => 'string',
            'country.en.IR' => 'string',
            'country.en.IQ' => 'string',
            'country.en.IE' => 'string',
            'country.en.IM' => 'string',
            'country.en.IL' => 'string',
            'country.en.IT' => 'string',
            'country.en.JM' => 'string',
            'country.en.JP' => 'string',
            'country.en.JE' => 'string',
            'country.en.JO' => 'string',
            'country.en.KZ' => 'string',
            'country.en.KE' => 'string',
            'country.en.KI' => 'string',
            'country.en.KW' => 'string',
            'country.en.KG' => 'string',
            'country.en.LA' => 'string',
            'country.en.LV' => 'string',
            'country.en.LB' => 'string',
            'country.en.LS' => 'string',
            'country.en.LR' => 'string',
            'country.en.LY' => 'string',
            'country.en.LI' => 'string',
            'country.en.LT' => 'string',
            'country.en.LU' => 'string',
            'country.en.MO' => 'string',
            'country.en.MG' => 'string',
            'country.en.MW' => 'string',
            'country.en.MY' => 'string',
            'country.en.MV' => 'string',
            'country.en.ML' => 'string',
            'country.en.MT' => 'string',
            'country.en.MH' => 'string',
            'country.en.MQ' => 'string',
            'country.en.MR' => 'string',
            'country.en.MU' => 'string',
            'country.en.YT' => 'string',
            'country.en.MX' => 'string',
            'country.en.FM' => 'string',
            'country.en.MD' => 'string',
            'country.en.MC' => 'string',
            'country.en.MN' => 'string',
            'country.en.ME' => 'string',
            'country.en.MS' => 'string',
            'country.en.MA' => 'string',
            'country.en.MZ' => 'string',
            'country.en.MM' => 'string',
            'country.en.NA' => 'string',
            'country.en.NR' => 'string',
            'country.en.NP' => 'string',
            'country.en.NL' => 'string',
            'country.en.NC' => 'string',
            'country.en.NZ' => 'string',
            'country.en.NI' => 'string',
            'country.en.NE' => 'string',
            'country.en.NG' => 'string',
            'country.en.NU' => 'string',
            'country.en.NF' => 'string',
            'country.en.KP' => 'string',
            'country.en.MK' => 'string',
            'country.en.MP' => 'string',
            'country.en.NO' => 'string',
            'country.en.OM' => 'string',
            'country.en.PK' => 'string',
            'country.en.PW' => 'string',
            'country.en.PS' => 'string',
            'country.en.PA' => 'string',
            'country.en.PG' => 'string',
            'country.en.PY' => 'string',
            'country.en.PE' => 'string',
            'country.en.PH' => 'string',
            'country.en.PN' => 'string',
            'country.en.PL' => 'string',
            'country.en.PT' => 'string',
            'country.en.PR' => 'string',
            'country.en.QA' => 'string',
            'country.en.RE' => 'string',
            'country.en.RO' => 'string',
            'country.en.RU' => 'string',
            'country.en.RW' => 'string',
            'country.en.WS' => 'string',
            'country.en.SM' => 'string',
            'country.en.ST' => 'string',
            'country.en.SA' => 'string',
            'country.en.SN' => 'string',
            'country.en.RS' => 'string',
            'country.en.SC' => 'string',
            'country.en.SL' => 'string',
            'country.en.SG' => 'string',
            'country.en.SX' => 'string',
            'country.en.SK' => 'string',
            'country.en.SI' => 'string',
            'country.en.SB' => 'string',
            'country.en.SO' => 'string',
            'country.en.ZA' => 'string',
            'country.en.GS' => 'string',
            'country.en.KR' => 'string',
            'country.en.SS' => 'string',
            'country.en.ES' => 'string',
            'country.en.LK' => 'string',
            'country.en.BL' => 'string',
            'country.en.SH' => 'string',
            'country.en.KN' => 'string',
            'country.en.LC' => 'string',
            'country.en.MF' => 'string',
            'country.en.PM' => 'string',
            'country.en.VC' => 'string',
            'country.en.SD' => 'string',
            'country.en.SR' => 'string',
            'country.en.SJ' => 'string',
            'country.en.SE' => 'string',
            'country.en.CH' => 'string',
            'country.en.SY' => 'string',
            'country.en.TW' => 'string',
            'country.en.TJ' => 'string',
            'country.en.TZ' => 'string',
            'country.en.TH' => 'string',
            'country.en.TL' => 'string',
            'country.en.TG' => 'string',
            'country.en.TK' => 'string',
            'country.en.TO' => 'string',
            'country.en.TT' => 'string',
            'country.en.TN' => 'string',
            'country.en.TR' => 'string',
            'country.en.TM' => 'string',
            'country.en.TC' => 'string',
            'country.en.TV' => 'string',
            'country.en.UM' => 'string',
            'country.en.VI' => 'string',
            'country.en.UG' => 'string',
            'country.en.UA' => 'string',
            'country.en.AE' => 'string',
            'country.en.GB' => 'string',
            'country.en.US' => 'string',
            'country.en.UY' => 'string',
            'country.en.UZ' => 'string',
            'country.en.VU' => 'string',
            'country.en.VA' => 'string',
            'country.en.VE' => 'string',
            'country.en.VN' => 'string',
            'country.en.WF' => 'string',
            'country.en.EH' => 'string',
            'country.en.YE' => 'string',
            'country.en.ZM' => 'string',
            'country.en.ZW' => 'string',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.local.report' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.public.report' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.disks.s3.report' => 'boolean',
            'filesystems.links.C:\Users\HP\Herd\ecom\public\storage' => 'string',
            'fortify.guard' => 'string',
            'fortify.middleware' => 'array',
            'fortify.auth_middleware' => 'string',
            'fortify.passwords' => 'string',
            'fortify.username' => 'string',
            'fortify.email' => 'string',
            'fortify.views' => 'boolean',
            'fortify.home' => 'string',
            'fortify.prefix' => 'string',
            'fortify.domain' => 'NULL',
            'fortify.lowercase_usernames' => 'boolean',
            'fortify.limiters.login' => 'string',
            'fortify.limiters.two-factor' => 'string',
            'fortify.paths.login' => 'NULL',
            'fortify.paths.logout' => 'NULL',
            'fortify.paths.password.request' => 'NULL',
            'fortify.paths.password.reset' => 'NULL',
            'fortify.paths.password.email' => 'NULL',
            'fortify.paths.password.update' => 'NULL',
            'fortify.paths.password.confirm' => 'NULL',
            'fortify.paths.password.confirmation' => 'NULL',
            'fortify.paths.register' => 'NULL',
            'fortify.paths.verification.notice' => 'NULL',
            'fortify.paths.verification.verify' => 'NULL',
            'fortify.paths.verification.send' => 'NULL',
            'fortify.paths.user-profile-information.update' => 'NULL',
            'fortify.paths.user-password.update' => 'NULL',
            'fortify.paths.two-factor.login' => 'NULL',
            'fortify.paths.two-factor.enable' => 'NULL',
            'fortify.paths.two-factor.confirm' => 'NULL',
            'fortify.paths.two-factor.disable' => 'NULL',
            'fortify.paths.two-factor.qr-code' => 'NULL',
            'fortify.paths.two-factor.secret-key' => 'NULL',
            'fortify.paths.two-factor.recovery-codes' => 'NULL',
            'fortify.redirects.login' => 'NULL',
            'fortify.redirects.logout' => 'NULL',
            'fortify.redirects.password-confirmation' => 'NULL',
            'fortify.redirects.register' => 'NULL',
            'fortify.redirects.email-verification' => 'NULL',
            'fortify.redirects.password-reset' => 'NULL',
            'fortify.features' => 'array',
            'jetstream.stack' => 'string',
            'jetstream.middleware' => 'array',
            'jetstream.features' => 'array',
            'jetstream.profile_photo_disk' => 'string',
            'jetstream.auth_session' => 'string',
            'jetstream.guard' => 'string',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'array',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.handler_with.stream' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.processors' => 'array',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'logging.channels.user_events.driver' => 'string',
            'logging.channels.user_events.path' => 'string',
            'logging.channels.user_events.level' => 'string',
            'logging.channels.user_errors.driver' => 'string',
            'logging.channels.user_errors.path' => 'string',
            'logging.channels.user_errors.level' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.failover.retry_after' => 'integer',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.mailers.roundrobin.retry_after' => 'integer',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'permission.models.permission' => 'string',
            'permission.models.role' => 'string',
            'permission.table_names.roles' => 'string',
            'permission.table_names.permissions' => 'string',
            'permission.table_names.model_has_permissions' => 'string',
            'permission.table_names.model_has_roles' => 'string',
            'permission.table_names.role_has_permissions' => 'string',
            'permission.column_names.role_pivot_key' => 'NULL',
            'permission.column_names.permission_pivot_key' => 'NULL',
            'permission.column_names.model_morph_key' => 'string',
            'permission.column_names.team_foreign_key' => 'string',
            'permission.register_permission_check_method' => 'boolean',
            'permission.register_octane_reset_listener' => 'boolean',
            'permission.events_enabled' => 'boolean',
            'permission.teams' => 'boolean',
            'permission.team_resolver' => 'string',
            'permission.use_passport_client_credentials' => 'boolean',
            'permission.display_permission_in_exception' => 'boolean',
            'permission.display_role_in_exception' => 'boolean',
            'permission.enable_wildcard_permission' => 'boolean',
            'permission.cache.expiration_time' => 'object',
            'permission.cache.key' => 'string',
            'permission.cache.store' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'sanctum.stateful' => 'array',
            'sanctum.guard' => 'array',
            'sanctum.expiration' => 'NULL',
            'sanctum.token_prefix' => 'string',
            'sanctum.middleware.authenticate_session' => 'string',
            'sanctum.middleware.encrypt_cookies' => 'string',
            'sanctum.middleware.validate_csrf_token' => 'string',
            'services.postmark.token' => 'NULL',
            'services.resend.key' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'integer',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.bcrypt.limit' => 'NULL',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'debugbar.enabled' => 'NULL',
            'debugbar.hide_empty_tabs' => 'boolean',
            'debugbar.except' => 'array',
            'debugbar.storage.enabled' => 'boolean',
            'debugbar.storage.open' => 'NULL',
            'debugbar.storage.driver' => 'string',
            'debugbar.storage.path' => 'string',
            'debugbar.storage.connection' => 'NULL',
            'debugbar.storage.provider' => 'string',
            'debugbar.storage.hostname' => 'string',
            'debugbar.storage.port' => 'integer',
            'debugbar.editor' => 'string',
            'debugbar.remote_sites_path' => 'NULL',
            'debugbar.local_sites_path' => 'NULL',
            'debugbar.include_vendors' => 'boolean',
            'debugbar.capture_ajax' => 'boolean',
            'debugbar.add_ajax_timing' => 'boolean',
            'debugbar.ajax_handler_auto_show' => 'boolean',
            'debugbar.ajax_handler_enable_tab' => 'boolean',
            'debugbar.defer_datasets' => 'boolean',
            'debugbar.error_handler' => 'boolean',
            'debugbar.clockwork' => 'boolean',
            'debugbar.collectors.phpinfo' => 'boolean',
            'debugbar.collectors.messages' => 'boolean',
            'debugbar.collectors.time' => 'boolean',
            'debugbar.collectors.memory' => 'boolean',
            'debugbar.collectors.exceptions' => 'boolean',
            'debugbar.collectors.log' => 'boolean',
            'debugbar.collectors.db' => 'boolean',
            'debugbar.collectors.views' => 'boolean',
            'debugbar.collectors.route' => 'boolean',
            'debugbar.collectors.auth' => 'boolean',
            'debugbar.collectors.gate' => 'boolean',
            'debugbar.collectors.session' => 'boolean',
            'debugbar.collectors.symfony_request' => 'boolean',
            'debugbar.collectors.mail' => 'boolean',
            'debugbar.collectors.laravel' => 'boolean',
            'debugbar.collectors.events' => 'boolean',
            'debugbar.collectors.default_request' => 'boolean',
            'debugbar.collectors.logs' => 'boolean',
            'debugbar.collectors.files' => 'boolean',
            'debugbar.collectors.config' => 'boolean',
            'debugbar.collectors.cache' => 'boolean',
            'debugbar.collectors.models' => 'boolean',
            'debugbar.collectors.livewire' => 'boolean',
            'debugbar.collectors.jobs' => 'boolean',
            'debugbar.collectors.pennant' => 'boolean',
            'debugbar.options.time.memory_usage' => 'boolean',
            'debugbar.options.messages.trace' => 'boolean',
            'debugbar.options.messages.capture_dumps' => 'boolean',
            'debugbar.options.memory.reset_peak' => 'boolean',
            'debugbar.options.memory.with_baseline' => 'boolean',
            'debugbar.options.memory.precision' => 'integer',
            'debugbar.options.auth.show_name' => 'boolean',
            'debugbar.options.auth.show_guards' => 'boolean',
            'debugbar.options.db.with_params' => 'boolean',
            'debugbar.options.db.exclude_paths' => 'array',
            'debugbar.options.db.backtrace' => 'boolean',
            'debugbar.options.db.backtrace_exclude_paths' => 'array',
            'debugbar.options.db.timeline' => 'boolean',
            'debugbar.options.db.duration_background' => 'boolean',
            'debugbar.options.db.explain.enabled' => 'boolean',
            'debugbar.options.db.hints' => 'boolean',
            'debugbar.options.db.show_copy' => 'boolean',
            'debugbar.options.db.slow_threshold' => 'boolean',
            'debugbar.options.db.memory_usage' => 'boolean',
            'debugbar.options.db.soft_limit' => 'integer',
            'debugbar.options.db.hard_limit' => 'integer',
            'debugbar.options.mail.timeline' => 'boolean',
            'debugbar.options.mail.show_body' => 'boolean',
            'debugbar.options.views.timeline' => 'boolean',
            'debugbar.options.views.data' => 'boolean',
            'debugbar.options.views.group' => 'integer',
            'debugbar.options.views.exclude_paths' => 'array',
            'debugbar.options.route.label' => 'boolean',
            'debugbar.options.session.hiddens' => 'array',
            'debugbar.options.symfony_request.label' => 'boolean',
            'debugbar.options.symfony_request.hiddens' => 'array',
            'debugbar.options.events.data' => 'boolean',
            'debugbar.options.logs.file' => 'NULL',
            'debugbar.options.cache.values' => 'boolean',
            'debugbar.inject' => 'boolean',
            'debugbar.route_prefix' => 'string',
            'debugbar.route_middleware' => 'array',
            'debugbar.route_domain' => 'NULL',
            'debugbar.theme' => 'string',
            'debugbar.debug_backtrace_limit' => 'integer',
            'livewire.class_namespace' => 'string',
            'livewire.view_path' => 'string',
            'livewire.layout' => 'string',
            'livewire.lazy_placeholder' => 'NULL',
            'livewire.temporary_file_upload.disk' => 'NULL',
            'livewire.temporary_file_upload.rules' => 'NULL',
            'livewire.temporary_file_upload.directory' => 'NULL',
            'livewire.temporary_file_upload.middleware' => 'NULL',
            'livewire.temporary_file_upload.preview_mimes' => 'array',
            'livewire.temporary_file_upload.max_upload_time' => 'integer',
            'livewire.temporary_file_upload.cleanup' => 'boolean',
            'livewire.render_on_redirect' => 'boolean',
            'livewire.legacy_model_binding' => 'boolean',
            'livewire.inject_assets' => 'boolean',
            'livewire.navigate.show_progress_bar' => 'boolean',
            'livewire.navigate.progress_bar_color' => 'string',
            'livewire.inject_morph_markers' => 'boolean',
            'livewire.pagination_theme' => 'string',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'array',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));
    override(\Illuminate\Config\Repository::get(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.sanctum.driver' => 'string',
            'auth.guards.sanctum.provider' => 'NULL',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.prefix' => 'string',
            'country.fr.AF' => 'string',
            'country.fr.ZA' => 'string',
            'country.fr.AL' => 'string',
            'country.fr.DZ' => 'string',
            'country.fr.DE' => 'string',
            'country.fr.AD' => 'string',
            'country.fr.AO' => 'string',
            'country.fr.AI' => 'string',
            'country.fr.AQ' => 'string',
            'country.fr.AG' => 'string',
            'country.fr.SA' => 'string',
            'country.fr.AR' => 'string',
            'country.fr.AM' => 'string',
            'country.fr.AW' => 'string',
            'country.fr.AU' => 'string',
            'country.fr.AT' => 'string',
            'country.fr.AZ' => 'string',
            'country.fr.BS' => 'string',
            'country.fr.BH' => 'string',
            'country.fr.BD' => 'string',
            'country.fr.BB' => 'string',
            'country.fr.BE' => 'string',
            'country.fr.BZ' => 'string',
            'country.fr.BJ' => 'string',
            'country.fr.BM' => 'string',
            'country.fr.BT' => 'string',
            'country.fr.BY' => 'string',
            'country.fr.BO' => 'string',
            'country.fr.BA' => 'string',
            'country.fr.BW' => 'string',
            'country.fr.BR' => 'string',
            'country.fr.BN' => 'string',
            'country.fr.BG' => 'string',
            'country.fr.BF' => 'string',
            'country.fr.BI' => 'string',
            'country.fr.KH' => 'string',
            'country.fr.CM' => 'string',
            'country.fr.CA' => 'string',
            'country.fr.CV' => 'string',
            'country.fr.CL' => 'string',
            'country.fr.CN' => 'string',
            'country.fr.CY' => 'string',
            'country.fr.CO' => 'string',
            'country.fr.KM' => 'string',
            'country.fr.CG' => 'string',
            'country.fr.CD' => 'string',
            'country.fr.KP' => 'string',
            'country.fr.KR' => 'string',
            'country.fr.CR' => 'string',
            'country.fr.CI' => 'string',
            'country.fr.HR' => 'string',
            'country.fr.CU' => 'string',
            'country.fr.CW' => 'string',
            'country.fr.DK' => 'string',
            'country.fr.DJ' => 'string',
            'country.fr.DM' => 'string',
            'country.fr.EG' => 'string',
            'country.fr.AE' => 'string',
            'country.fr.EC' => 'string',
            'country.fr.ER' => 'string',
            'country.fr.ES' => 'string',
            'country.fr.EE' => 'string',
            'country.fr.SZ' => 'string',
            'country.fr.VA' => 'string',
            'country.fr.FM' => 'string',
            'country.fr.US' => 'string',
            'country.fr.ET' => 'string',
            'country.fr.FJ' => 'string',
            'country.fr.FI' => 'string',
            'country.fr.FR' => 'string',
            'country.fr.GA' => 'string',
            'country.fr.GM' => 'string',
            'country.fr.GE' => 'string',
            'country.fr.GS' => 'string',
            'country.fr.GH' => 'string',
            'country.fr.GI' => 'string',
            'country.fr.GR' => 'string',
            'country.fr.GD' => 'string',
            'country.fr.GL' => 'string',
            'country.fr.GP' => 'string',
            'country.fr.GU' => 'string',
            'country.fr.GT' => 'string',
            'country.fr.GG' => 'string',
            'country.fr.GN' => 'string',
            'country.fr.GQ' => 'string',
            'country.fr.GW' => 'string',
            'country.fr.GY' => 'string',
            'country.fr.GF' => 'string',
            'country.fr.HT' => 'string',
            'country.fr.HN' => 'string',
            'country.fr.HU' => 'string',
            'country.fr.BV' => 'string',
            'country.fr.CX' => 'string',
            'country.fr.IM' => 'string',
            'country.fr.NF' => 'string',
            'country.fr.AX' => 'string',
            'country.fr.KY' => 'string',
            'country.fr.CC' => 'string',
            'country.fr.CK' => 'string',
            'country.fr.FO' => 'string',
            'country.fr.HM' => 'string',
            'country.fr.FK' => 'string',
            'country.fr.MP' => 'string',
            'country.fr.MH' => 'string',
            'country.fr.UM' => 'string',
            'country.fr.PN' => 'string',
            'country.fr.SB' => 'string',
            'country.fr.TC' => 'string',
            'country.fr.VG' => 'string',
            'country.fr.VI' => 'string',
            'country.fr.IN' => 'string',
            'country.fr.ID' => 'string',
            'country.fr.IQ' => 'string',
            'country.fr.IR' => 'string',
            'country.fr.IE' => 'string',
            'country.fr.IS' => 'string',
            'country.fr.IL' => 'string',
            'country.fr.IT' => 'string',
            'country.fr.JM' => 'string',
            'country.fr.JP' => 'string',
            'country.fr.JE' => 'string',
            'country.fr.JO' => 'string',
            'country.fr.KZ' => 'string',
            'country.fr.KE' => 'string',
            'country.fr.KG' => 'string',
            'country.fr.KI' => 'string',
            'country.fr.KW' => 'string',
            'country.fr.RE' => 'string',
            'country.fr.LA' => 'string',
            'country.fr.LS' => 'string',
            'country.fr.LV' => 'string',
            'country.fr.LB' => 'string',
            'country.fr.LR' => 'string',
            'country.fr.LY' => 'string',
            'country.fr.LI' => 'string',
            'country.fr.LT' => 'string',
            'country.fr.LU' => 'string',
            'country.fr.MK' => 'string',
            'country.fr.MG' => 'string',
            'country.fr.MY' => 'string',
            'country.fr.MW' => 'string',
            'country.fr.MV' => 'string',
            'country.fr.ML' => 'string',
            'country.fr.MT' => 'string',
            'country.fr.MA' => 'string',
            'country.fr.MQ' => 'string',
            'country.fr.MU' => 'string',
            'country.fr.MR' => 'string',
            'country.fr.YT' => 'string',
            'country.fr.MX' => 'string',
            'country.fr.MD' => 'string',
            'country.fr.MC' => 'string',
            'country.fr.MN' => 'string',
            'country.fr.ME' => 'string',
            'country.fr.MS' => 'string',
            'country.fr.MZ' => 'string',
            'country.fr.MM' => 'string',
            'country.fr.NA' => 'string',
            'country.fr.NR' => 'string',
            'country.fr.NP' => 'string',
            'country.fr.NI' => 'string',
            'country.fr.NE' => 'string',
            'country.fr.NG' => 'string',
            'country.fr.NU' => 'string',
            'country.fr.NO' => 'string',
            'country.fr.NC' => 'string',
            'country.fr.NZ' => 'string',
            'country.fr.OM' => 'string',
            'country.fr.UG' => 'string',
            'country.fr.UZ' => 'string',
            'country.fr.PK' => 'string',
            'country.fr.PW' => 'string',
            'country.fr.PA' => 'string',
            'country.fr.PG' => 'string',
            'country.fr.PY' => 'string',
            'country.fr.NL' => 'string',
            'country.fr.BQ' => 'string',
            'country.fr.PE' => 'string',
            'country.fr.PH' => 'string',
            'country.fr.PL' => 'string',
            'country.fr.PF' => 'string',
            'country.fr.PR' => 'string',
            'country.fr.PT' => 'string',
            'country.fr.QA' => 'string',
            'country.fr.HK' => 'string',
            'country.fr.MO' => 'string',
            'country.fr.CF' => 'string',
            'country.fr.DO' => 'string',
            'country.fr.RO' => 'string',
            'country.fr.GB' => 'string',
            'country.fr.RU' => 'string',
            'country.fr.RW' => 'string',
            'country.fr.EH' => 'string',
            'country.fr.BL' => 'string',
            'country.fr.KN' => 'string',
            'country.fr.SM' => 'string',
            'country.fr.MF' => 'string',
            'country.fr.SX' => 'string',
            'country.fr.PM' => 'string',
            'country.fr.VC' => 'string',
            'country.fr.SH' => 'string',
            'country.fr.LC' => 'string',
            'country.fr.SV' => 'string',
            'country.fr.WS' => 'string',
            'country.fr.AS' => 'string',
            'country.fr.ST' => 'string',
            'country.fr.SN' => 'string',
            'country.fr.RS' => 'string',
            'country.fr.SC' => 'string',
            'country.fr.SL' => 'string',
            'country.fr.SG' => 'string',
            'country.fr.SK' => 'string',
            'country.fr.SI' => 'string',
            'country.fr.SO' => 'string',
            'country.fr.SD' => 'string',
            'country.fr.SS' => 'string',
            'country.fr.LK' => 'string',
            'country.fr.SE' => 'string',
            'country.fr.CH' => 'string',
            'country.fr.SR' => 'string',
            'country.fr.SJ' => 'string',
            'country.fr.SY' => 'string',
            'country.fr.TJ' => 'string',
            'country.fr.TW' => 'string',
            'country.fr.TZ' => 'string',
            'country.fr.TD' => 'string',
            'country.fr.CZ' => 'string',
            'country.fr.TF' => 'string',
            'country.fr.IO' => 'string',
            'country.fr.PS' => 'string',
            'country.fr.TH' => 'string',
            'country.fr.TL' => 'string',
            'country.fr.TG' => 'string',
            'country.fr.TK' => 'string',
            'country.fr.TO' => 'string',
            'country.fr.TT' => 'string',
            'country.fr.TN' => 'string',
            'country.fr.TM' => 'string',
            'country.fr.TR' => 'string',
            'country.fr.TV' => 'string',
            'country.fr.UA' => 'string',
            'country.fr.UY' => 'string',
            'country.fr.VU' => 'string',
            'country.fr.VE' => 'string',
            'country.fr.VN' => 'string',
            'country.fr.WF' => 'string',
            'country.fr.YE' => 'string',
            'country.fr.ZM' => 'string',
            'country.fr.ZW' => 'string',
            'country.en.AF' => 'string',
            'country.en.AX' => 'string',
            'country.en.AL' => 'string',
            'country.en.DZ' => 'string',
            'country.en.AS' => 'string',
            'country.en.AD' => 'string',
            'country.en.AO' => 'string',
            'country.en.AI' => 'string',
            'country.en.AQ' => 'string',
            'country.en.AG' => 'string',
            'country.en.AR' => 'string',
            'country.en.AM' => 'string',
            'country.en.AW' => 'string',
            'country.en.AU' => 'string',
            'country.en.AT' => 'string',
            'country.en.AZ' => 'string',
            'country.en.BS' => 'string',
            'country.en.BH' => 'string',
            'country.en.BD' => 'string',
            'country.en.BB' => 'string',
            'country.en.BY' => 'string',
            'country.en.BE' => 'string',
            'country.en.BZ' => 'string',
            'country.en.BJ' => 'string',
            'country.en.BM' => 'string',
            'country.en.BT' => 'string',
            'country.en.BO' => 'string',
            'country.en.BA' => 'string',
            'country.en.BW' => 'string',
            'country.en.BV' => 'string',
            'country.en.BR' => 'string',
            'country.en.IO' => 'string',
            'country.en.VG' => 'string',
            'country.en.BN' => 'string',
            'country.en.BG' => 'string',
            'country.en.BF' => 'string',
            'country.en.BI' => 'string',
            'country.en.KH' => 'string',
            'country.en.CM' => 'string',
            'country.en.CA' => 'string',
            'country.en.CV' => 'string',
            'country.en.BQ' => 'string',
            'country.en.KY' => 'string',
            'country.en.CF' => 'string',
            'country.en.TD' => 'string',
            'country.en.CL' => 'string',
            'country.en.CN' => 'string',
            'country.en.CX' => 'string',
            'country.en.CC' => 'string',
            'country.en.CO' => 'string',
            'country.en.KM' => 'string',
            'country.en.CG' => 'string',
            'country.en.CD' => 'string',
            'country.en.CK' => 'string',
            'country.en.CR' => 'string',
            'country.en.CI' => 'string',
            'country.en.HR' => 'string',
            'country.en.CU' => 'string',
            'country.en.CW' => 'string',
            'country.en.CY' => 'string',
            'country.en.CZ' => 'string',
            'country.en.DK' => 'string',
            'country.en.DJ' => 'string',
            'country.en.DM' => 'string',
            'country.en.DO' => 'string',
            'country.en.EC' => 'string',
            'country.en.EG' => 'string',
            'country.en.SV' => 'string',
            'country.en.GQ' => 'string',
            'country.en.ER' => 'string',
            'country.en.EE' => 'string',
            'country.en.SZ' => 'string',
            'country.en.ET' => 'string',
            'country.en.FK' => 'string',
            'country.en.FO' => 'string',
            'country.en.FJ' => 'string',
            'country.en.FI' => 'string',
            'country.en.FR' => 'string',
            'country.en.GF' => 'string',
            'country.en.PF' => 'string',
            'country.en.TF' => 'string',
            'country.en.GA' => 'string',
            'country.en.GM' => 'string',
            'country.en.GE' => 'string',
            'country.en.DE' => 'string',
            'country.en.GH' => 'string',
            'country.en.GI' => 'string',
            'country.en.GR' => 'string',
            'country.en.GL' => 'string',
            'country.en.GD' => 'string',
            'country.en.GP' => 'string',
            'country.en.GU' => 'string',
            'country.en.GT' => 'string',
            'country.en.GG' => 'string',
            'country.en.GN' => 'string',
            'country.en.GW' => 'string',
            'country.en.GY' => 'string',
            'country.en.HT' => 'string',
            'country.en.HM' => 'string',
            'country.en.HN' => 'string',
            'country.en.HK' => 'string',
            'country.en.HU' => 'string',
            'country.en.IS' => 'string',
            'country.en.IN' => 'string',
            'country.en.ID' => 'string',
            'country.en.IR' => 'string',
            'country.en.IQ' => 'string',
            'country.en.IE' => 'string',
            'country.en.IM' => 'string',
            'country.en.IL' => 'string',
            'country.en.IT' => 'string',
            'country.en.JM' => 'string',
            'country.en.JP' => 'string',
            'country.en.JE' => 'string',
            'country.en.JO' => 'string',
            'country.en.KZ' => 'string',
            'country.en.KE' => 'string',
            'country.en.KI' => 'string',
            'country.en.KW' => 'string',
            'country.en.KG' => 'string',
            'country.en.LA' => 'string',
            'country.en.LV' => 'string',
            'country.en.LB' => 'string',
            'country.en.LS' => 'string',
            'country.en.LR' => 'string',
            'country.en.LY' => 'string',
            'country.en.LI' => 'string',
            'country.en.LT' => 'string',
            'country.en.LU' => 'string',
            'country.en.MO' => 'string',
            'country.en.MG' => 'string',
            'country.en.MW' => 'string',
            'country.en.MY' => 'string',
            'country.en.MV' => 'string',
            'country.en.ML' => 'string',
            'country.en.MT' => 'string',
            'country.en.MH' => 'string',
            'country.en.MQ' => 'string',
            'country.en.MR' => 'string',
            'country.en.MU' => 'string',
            'country.en.YT' => 'string',
            'country.en.MX' => 'string',
            'country.en.FM' => 'string',
            'country.en.MD' => 'string',
            'country.en.MC' => 'string',
            'country.en.MN' => 'string',
            'country.en.ME' => 'string',
            'country.en.MS' => 'string',
            'country.en.MA' => 'string',
            'country.en.MZ' => 'string',
            'country.en.MM' => 'string',
            'country.en.NA' => 'string',
            'country.en.NR' => 'string',
            'country.en.NP' => 'string',
            'country.en.NL' => 'string',
            'country.en.NC' => 'string',
            'country.en.NZ' => 'string',
            'country.en.NI' => 'string',
            'country.en.NE' => 'string',
            'country.en.NG' => 'string',
            'country.en.NU' => 'string',
            'country.en.NF' => 'string',
            'country.en.KP' => 'string',
            'country.en.MK' => 'string',
            'country.en.MP' => 'string',
            'country.en.NO' => 'string',
            'country.en.OM' => 'string',
            'country.en.PK' => 'string',
            'country.en.PW' => 'string',
            'country.en.PS' => 'string',
            'country.en.PA' => 'string',
            'country.en.PG' => 'string',
            'country.en.PY' => 'string',
            'country.en.PE' => 'string',
            'country.en.PH' => 'string',
            'country.en.PN' => 'string',
            'country.en.PL' => 'string',
            'country.en.PT' => 'string',
            'country.en.PR' => 'string',
            'country.en.QA' => 'string',
            'country.en.RE' => 'string',
            'country.en.RO' => 'string',
            'country.en.RU' => 'string',
            'country.en.RW' => 'string',
            'country.en.WS' => 'string',
            'country.en.SM' => 'string',
            'country.en.ST' => 'string',
            'country.en.SA' => 'string',
            'country.en.SN' => 'string',
            'country.en.RS' => 'string',
            'country.en.SC' => 'string',
            'country.en.SL' => 'string',
            'country.en.SG' => 'string',
            'country.en.SX' => 'string',
            'country.en.SK' => 'string',
            'country.en.SI' => 'string',
            'country.en.SB' => 'string',
            'country.en.SO' => 'string',
            'country.en.ZA' => 'string',
            'country.en.GS' => 'string',
            'country.en.KR' => 'string',
            'country.en.SS' => 'string',
            'country.en.ES' => 'string',
            'country.en.LK' => 'string',
            'country.en.BL' => 'string',
            'country.en.SH' => 'string',
            'country.en.KN' => 'string',
            'country.en.LC' => 'string',
            'country.en.MF' => 'string',
            'country.en.PM' => 'string',
            'country.en.VC' => 'string',
            'country.en.SD' => 'string',
            'country.en.SR' => 'string',
            'country.en.SJ' => 'string',
            'country.en.SE' => 'string',
            'country.en.CH' => 'string',
            'country.en.SY' => 'string',
            'country.en.TW' => 'string',
            'country.en.TJ' => 'string',
            'country.en.TZ' => 'string',
            'country.en.TH' => 'string',
            'country.en.TL' => 'string',
            'country.en.TG' => 'string',
            'country.en.TK' => 'string',
            'country.en.TO' => 'string',
            'country.en.TT' => 'string',
            'country.en.TN' => 'string',
            'country.en.TR' => 'string',
            'country.en.TM' => 'string',
            'country.en.TC' => 'string',
            'country.en.TV' => 'string',
            'country.en.UM' => 'string',
            'country.en.VI' => 'string',
            'country.en.UG' => 'string',
            'country.en.UA' => 'string',
            'country.en.AE' => 'string',
            'country.en.GB' => 'string',
            'country.en.US' => 'string',
            'country.en.UY' => 'string',
            'country.en.UZ' => 'string',
            'country.en.VU' => 'string',
            'country.en.VA' => 'string',
            'country.en.VE' => 'string',
            'country.en.VN' => 'string',
            'country.en.WF' => 'string',
            'country.en.EH' => 'string',
            'country.en.YE' => 'string',
            'country.en.ZM' => 'string',
            'country.en.ZW' => 'string',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.local.report' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.public.report' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.disks.s3.report' => 'boolean',
            'filesystems.links.C:\Users\HP\Herd\ecom\public\storage' => 'string',
            'fortify.guard' => 'string',
            'fortify.middleware' => 'array',
            'fortify.auth_middleware' => 'string',
            'fortify.passwords' => 'string',
            'fortify.username' => 'string',
            'fortify.email' => 'string',
            'fortify.views' => 'boolean',
            'fortify.home' => 'string',
            'fortify.prefix' => 'string',
            'fortify.domain' => 'NULL',
            'fortify.lowercase_usernames' => 'boolean',
            'fortify.limiters.login' => 'string',
            'fortify.limiters.two-factor' => 'string',
            'fortify.paths.login' => 'NULL',
            'fortify.paths.logout' => 'NULL',
            'fortify.paths.password.request' => 'NULL',
            'fortify.paths.password.reset' => 'NULL',
            'fortify.paths.password.email' => 'NULL',
            'fortify.paths.password.update' => 'NULL',
            'fortify.paths.password.confirm' => 'NULL',
            'fortify.paths.password.confirmation' => 'NULL',
            'fortify.paths.register' => 'NULL',
            'fortify.paths.verification.notice' => 'NULL',
            'fortify.paths.verification.verify' => 'NULL',
            'fortify.paths.verification.send' => 'NULL',
            'fortify.paths.user-profile-information.update' => 'NULL',
            'fortify.paths.user-password.update' => 'NULL',
            'fortify.paths.two-factor.login' => 'NULL',
            'fortify.paths.two-factor.enable' => 'NULL',
            'fortify.paths.two-factor.confirm' => 'NULL',
            'fortify.paths.two-factor.disable' => 'NULL',
            'fortify.paths.two-factor.qr-code' => 'NULL',
            'fortify.paths.two-factor.secret-key' => 'NULL',
            'fortify.paths.two-factor.recovery-codes' => 'NULL',
            'fortify.redirects.login' => 'NULL',
            'fortify.redirects.logout' => 'NULL',
            'fortify.redirects.password-confirmation' => 'NULL',
            'fortify.redirects.register' => 'NULL',
            'fortify.redirects.email-verification' => 'NULL',
            'fortify.redirects.password-reset' => 'NULL',
            'fortify.features' => 'array',
            'jetstream.stack' => 'string',
            'jetstream.middleware' => 'array',
            'jetstream.features' => 'array',
            'jetstream.profile_photo_disk' => 'string',
            'jetstream.auth_session' => 'string',
            'jetstream.guard' => 'string',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'array',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.handler_with.stream' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.processors' => 'array',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'logging.channels.user_events.driver' => 'string',
            'logging.channels.user_events.path' => 'string',
            'logging.channels.user_events.level' => 'string',
            'logging.channels.user_errors.driver' => 'string',
            'logging.channels.user_errors.path' => 'string',
            'logging.channels.user_errors.level' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.failover.retry_after' => 'integer',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.mailers.roundrobin.retry_after' => 'integer',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'permission.models.permission' => 'string',
            'permission.models.role' => 'string',
            'permission.table_names.roles' => 'string',
            'permission.table_names.permissions' => 'string',
            'permission.table_names.model_has_permissions' => 'string',
            'permission.table_names.model_has_roles' => 'string',
            'permission.table_names.role_has_permissions' => 'string',
            'permission.column_names.role_pivot_key' => 'NULL',
            'permission.column_names.permission_pivot_key' => 'NULL',
            'permission.column_names.model_morph_key' => 'string',
            'permission.column_names.team_foreign_key' => 'string',
            'permission.register_permission_check_method' => 'boolean',
            'permission.register_octane_reset_listener' => 'boolean',
            'permission.events_enabled' => 'boolean',
            'permission.teams' => 'boolean',
            'permission.team_resolver' => 'string',
            'permission.use_passport_client_credentials' => 'boolean',
            'permission.display_permission_in_exception' => 'boolean',
            'permission.display_role_in_exception' => 'boolean',
            'permission.enable_wildcard_permission' => 'boolean',
            'permission.cache.expiration_time' => 'object',
            'permission.cache.key' => 'string',
            'permission.cache.store' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'sanctum.stateful' => 'array',
            'sanctum.guard' => 'array',
            'sanctum.expiration' => 'NULL',
            'sanctum.token_prefix' => 'string',
            'sanctum.middleware.authenticate_session' => 'string',
            'sanctum.middleware.encrypt_cookies' => 'string',
            'sanctum.middleware.validate_csrf_token' => 'string',
            'services.postmark.token' => 'NULL',
            'services.resend.key' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'integer',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.bcrypt.limit' => 'NULL',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'debugbar.enabled' => 'NULL',
            'debugbar.hide_empty_tabs' => 'boolean',
            'debugbar.except' => 'array',
            'debugbar.storage.enabled' => 'boolean',
            'debugbar.storage.open' => 'NULL',
            'debugbar.storage.driver' => 'string',
            'debugbar.storage.path' => 'string',
            'debugbar.storage.connection' => 'NULL',
            'debugbar.storage.provider' => 'string',
            'debugbar.storage.hostname' => 'string',
            'debugbar.storage.port' => 'integer',
            'debugbar.editor' => 'string',
            'debugbar.remote_sites_path' => 'NULL',
            'debugbar.local_sites_path' => 'NULL',
            'debugbar.include_vendors' => 'boolean',
            'debugbar.capture_ajax' => 'boolean',
            'debugbar.add_ajax_timing' => 'boolean',
            'debugbar.ajax_handler_auto_show' => 'boolean',
            'debugbar.ajax_handler_enable_tab' => 'boolean',
            'debugbar.defer_datasets' => 'boolean',
            'debugbar.error_handler' => 'boolean',
            'debugbar.clockwork' => 'boolean',
            'debugbar.collectors.phpinfo' => 'boolean',
            'debugbar.collectors.messages' => 'boolean',
            'debugbar.collectors.time' => 'boolean',
            'debugbar.collectors.memory' => 'boolean',
            'debugbar.collectors.exceptions' => 'boolean',
            'debugbar.collectors.log' => 'boolean',
            'debugbar.collectors.db' => 'boolean',
            'debugbar.collectors.views' => 'boolean',
            'debugbar.collectors.route' => 'boolean',
            'debugbar.collectors.auth' => 'boolean',
            'debugbar.collectors.gate' => 'boolean',
            'debugbar.collectors.session' => 'boolean',
            'debugbar.collectors.symfony_request' => 'boolean',
            'debugbar.collectors.mail' => 'boolean',
            'debugbar.collectors.laravel' => 'boolean',
            'debugbar.collectors.events' => 'boolean',
            'debugbar.collectors.default_request' => 'boolean',
            'debugbar.collectors.logs' => 'boolean',
            'debugbar.collectors.files' => 'boolean',
            'debugbar.collectors.config' => 'boolean',
            'debugbar.collectors.cache' => 'boolean',
            'debugbar.collectors.models' => 'boolean',
            'debugbar.collectors.livewire' => 'boolean',
            'debugbar.collectors.jobs' => 'boolean',
            'debugbar.collectors.pennant' => 'boolean',
            'debugbar.options.time.memory_usage' => 'boolean',
            'debugbar.options.messages.trace' => 'boolean',
            'debugbar.options.messages.capture_dumps' => 'boolean',
            'debugbar.options.memory.reset_peak' => 'boolean',
            'debugbar.options.memory.with_baseline' => 'boolean',
            'debugbar.options.memory.precision' => 'integer',
            'debugbar.options.auth.show_name' => 'boolean',
            'debugbar.options.auth.show_guards' => 'boolean',
            'debugbar.options.db.with_params' => 'boolean',
            'debugbar.options.db.exclude_paths' => 'array',
            'debugbar.options.db.backtrace' => 'boolean',
            'debugbar.options.db.backtrace_exclude_paths' => 'array',
            'debugbar.options.db.timeline' => 'boolean',
            'debugbar.options.db.duration_background' => 'boolean',
            'debugbar.options.db.explain.enabled' => 'boolean',
            'debugbar.options.db.hints' => 'boolean',
            'debugbar.options.db.show_copy' => 'boolean',
            'debugbar.options.db.slow_threshold' => 'boolean',
            'debugbar.options.db.memory_usage' => 'boolean',
            'debugbar.options.db.soft_limit' => 'integer',
            'debugbar.options.db.hard_limit' => 'integer',
            'debugbar.options.mail.timeline' => 'boolean',
            'debugbar.options.mail.show_body' => 'boolean',
            'debugbar.options.views.timeline' => 'boolean',
            'debugbar.options.views.data' => 'boolean',
            'debugbar.options.views.group' => 'integer',
            'debugbar.options.views.exclude_paths' => 'array',
            'debugbar.options.route.label' => 'boolean',
            'debugbar.options.session.hiddens' => 'array',
            'debugbar.options.symfony_request.label' => 'boolean',
            'debugbar.options.symfony_request.hiddens' => 'array',
            'debugbar.options.events.data' => 'boolean',
            'debugbar.options.logs.file' => 'NULL',
            'debugbar.options.cache.values' => 'boolean',
            'debugbar.inject' => 'boolean',
            'debugbar.route_prefix' => 'string',
            'debugbar.route_middleware' => 'array',
            'debugbar.route_domain' => 'NULL',
            'debugbar.theme' => 'string',
            'debugbar.debug_backtrace_limit' => 'integer',
            'livewire.class_namespace' => 'string',
            'livewire.view_path' => 'string',
            'livewire.layout' => 'string',
            'livewire.lazy_placeholder' => 'NULL',
            'livewire.temporary_file_upload.disk' => 'NULL',
            'livewire.temporary_file_upload.rules' => 'NULL',
            'livewire.temporary_file_upload.directory' => 'NULL',
            'livewire.temporary_file_upload.middleware' => 'NULL',
            'livewire.temporary_file_upload.preview_mimes' => 'array',
            'livewire.temporary_file_upload.max_upload_time' => 'integer',
            'livewire.temporary_file_upload.cleanup' => 'boolean',
            'livewire.render_on_redirect' => 'boolean',
            'livewire.legacy_model_binding' => 'boolean',
            'livewire.inject_assets' => 'boolean',
            'livewire.navigate.show_progress_bar' => 'boolean',
            'livewire.navigate.progress_bar_color' => 'string',
            'livewire.inject_morph_markers' => 'boolean',
            'livewire.pagination_theme' => 'string',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'array',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));
    override(\Illuminate\Support\Facades\Config::get(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.sanctum.driver' => 'string',
            'auth.guards.sanctum.provider' => 'NULL',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.prefix' => 'string',
            'country.fr.AF' => 'string',
            'country.fr.ZA' => 'string',
            'country.fr.AL' => 'string',
            'country.fr.DZ' => 'string',
            'country.fr.DE' => 'string',
            'country.fr.AD' => 'string',
            'country.fr.AO' => 'string',
            'country.fr.AI' => 'string',
            'country.fr.AQ' => 'string',
            'country.fr.AG' => 'string',
            'country.fr.SA' => 'string',
            'country.fr.AR' => 'string',
            'country.fr.AM' => 'string',
            'country.fr.AW' => 'string',
            'country.fr.AU' => 'string',
            'country.fr.AT' => 'string',
            'country.fr.AZ' => 'string',
            'country.fr.BS' => 'string',
            'country.fr.BH' => 'string',
            'country.fr.BD' => 'string',
            'country.fr.BB' => 'string',
            'country.fr.BE' => 'string',
            'country.fr.BZ' => 'string',
            'country.fr.BJ' => 'string',
            'country.fr.BM' => 'string',
            'country.fr.BT' => 'string',
            'country.fr.BY' => 'string',
            'country.fr.BO' => 'string',
            'country.fr.BA' => 'string',
            'country.fr.BW' => 'string',
            'country.fr.BR' => 'string',
            'country.fr.BN' => 'string',
            'country.fr.BG' => 'string',
            'country.fr.BF' => 'string',
            'country.fr.BI' => 'string',
            'country.fr.KH' => 'string',
            'country.fr.CM' => 'string',
            'country.fr.CA' => 'string',
            'country.fr.CV' => 'string',
            'country.fr.CL' => 'string',
            'country.fr.CN' => 'string',
            'country.fr.CY' => 'string',
            'country.fr.CO' => 'string',
            'country.fr.KM' => 'string',
            'country.fr.CG' => 'string',
            'country.fr.CD' => 'string',
            'country.fr.KP' => 'string',
            'country.fr.KR' => 'string',
            'country.fr.CR' => 'string',
            'country.fr.CI' => 'string',
            'country.fr.HR' => 'string',
            'country.fr.CU' => 'string',
            'country.fr.CW' => 'string',
            'country.fr.DK' => 'string',
            'country.fr.DJ' => 'string',
            'country.fr.DM' => 'string',
            'country.fr.EG' => 'string',
            'country.fr.AE' => 'string',
            'country.fr.EC' => 'string',
            'country.fr.ER' => 'string',
            'country.fr.ES' => 'string',
            'country.fr.EE' => 'string',
            'country.fr.SZ' => 'string',
            'country.fr.VA' => 'string',
            'country.fr.FM' => 'string',
            'country.fr.US' => 'string',
            'country.fr.ET' => 'string',
            'country.fr.FJ' => 'string',
            'country.fr.FI' => 'string',
            'country.fr.FR' => 'string',
            'country.fr.GA' => 'string',
            'country.fr.GM' => 'string',
            'country.fr.GE' => 'string',
            'country.fr.GS' => 'string',
            'country.fr.GH' => 'string',
            'country.fr.GI' => 'string',
            'country.fr.GR' => 'string',
            'country.fr.GD' => 'string',
            'country.fr.GL' => 'string',
            'country.fr.GP' => 'string',
            'country.fr.GU' => 'string',
            'country.fr.GT' => 'string',
            'country.fr.GG' => 'string',
            'country.fr.GN' => 'string',
            'country.fr.GQ' => 'string',
            'country.fr.GW' => 'string',
            'country.fr.GY' => 'string',
            'country.fr.GF' => 'string',
            'country.fr.HT' => 'string',
            'country.fr.HN' => 'string',
            'country.fr.HU' => 'string',
            'country.fr.BV' => 'string',
            'country.fr.CX' => 'string',
            'country.fr.IM' => 'string',
            'country.fr.NF' => 'string',
            'country.fr.AX' => 'string',
            'country.fr.KY' => 'string',
            'country.fr.CC' => 'string',
            'country.fr.CK' => 'string',
            'country.fr.FO' => 'string',
            'country.fr.HM' => 'string',
            'country.fr.FK' => 'string',
            'country.fr.MP' => 'string',
            'country.fr.MH' => 'string',
            'country.fr.UM' => 'string',
            'country.fr.PN' => 'string',
            'country.fr.SB' => 'string',
            'country.fr.TC' => 'string',
            'country.fr.VG' => 'string',
            'country.fr.VI' => 'string',
            'country.fr.IN' => 'string',
            'country.fr.ID' => 'string',
            'country.fr.IQ' => 'string',
            'country.fr.IR' => 'string',
            'country.fr.IE' => 'string',
            'country.fr.IS' => 'string',
            'country.fr.IL' => 'string',
            'country.fr.IT' => 'string',
            'country.fr.JM' => 'string',
            'country.fr.JP' => 'string',
            'country.fr.JE' => 'string',
            'country.fr.JO' => 'string',
            'country.fr.KZ' => 'string',
            'country.fr.KE' => 'string',
            'country.fr.KG' => 'string',
            'country.fr.KI' => 'string',
            'country.fr.KW' => 'string',
            'country.fr.RE' => 'string',
            'country.fr.LA' => 'string',
            'country.fr.LS' => 'string',
            'country.fr.LV' => 'string',
            'country.fr.LB' => 'string',
            'country.fr.LR' => 'string',
            'country.fr.LY' => 'string',
            'country.fr.LI' => 'string',
            'country.fr.LT' => 'string',
            'country.fr.LU' => 'string',
            'country.fr.MK' => 'string',
            'country.fr.MG' => 'string',
            'country.fr.MY' => 'string',
            'country.fr.MW' => 'string',
            'country.fr.MV' => 'string',
            'country.fr.ML' => 'string',
            'country.fr.MT' => 'string',
            'country.fr.MA' => 'string',
            'country.fr.MQ' => 'string',
            'country.fr.MU' => 'string',
            'country.fr.MR' => 'string',
            'country.fr.YT' => 'string',
            'country.fr.MX' => 'string',
            'country.fr.MD' => 'string',
            'country.fr.MC' => 'string',
            'country.fr.MN' => 'string',
            'country.fr.ME' => 'string',
            'country.fr.MS' => 'string',
            'country.fr.MZ' => 'string',
            'country.fr.MM' => 'string',
            'country.fr.NA' => 'string',
            'country.fr.NR' => 'string',
            'country.fr.NP' => 'string',
            'country.fr.NI' => 'string',
            'country.fr.NE' => 'string',
            'country.fr.NG' => 'string',
            'country.fr.NU' => 'string',
            'country.fr.NO' => 'string',
            'country.fr.NC' => 'string',
            'country.fr.NZ' => 'string',
            'country.fr.OM' => 'string',
            'country.fr.UG' => 'string',
            'country.fr.UZ' => 'string',
            'country.fr.PK' => 'string',
            'country.fr.PW' => 'string',
            'country.fr.PA' => 'string',
            'country.fr.PG' => 'string',
            'country.fr.PY' => 'string',
            'country.fr.NL' => 'string',
            'country.fr.BQ' => 'string',
            'country.fr.PE' => 'string',
            'country.fr.PH' => 'string',
            'country.fr.PL' => 'string',
            'country.fr.PF' => 'string',
            'country.fr.PR' => 'string',
            'country.fr.PT' => 'string',
            'country.fr.QA' => 'string',
            'country.fr.HK' => 'string',
            'country.fr.MO' => 'string',
            'country.fr.CF' => 'string',
            'country.fr.DO' => 'string',
            'country.fr.RO' => 'string',
            'country.fr.GB' => 'string',
            'country.fr.RU' => 'string',
            'country.fr.RW' => 'string',
            'country.fr.EH' => 'string',
            'country.fr.BL' => 'string',
            'country.fr.KN' => 'string',
            'country.fr.SM' => 'string',
            'country.fr.MF' => 'string',
            'country.fr.SX' => 'string',
            'country.fr.PM' => 'string',
            'country.fr.VC' => 'string',
            'country.fr.SH' => 'string',
            'country.fr.LC' => 'string',
            'country.fr.SV' => 'string',
            'country.fr.WS' => 'string',
            'country.fr.AS' => 'string',
            'country.fr.ST' => 'string',
            'country.fr.SN' => 'string',
            'country.fr.RS' => 'string',
            'country.fr.SC' => 'string',
            'country.fr.SL' => 'string',
            'country.fr.SG' => 'string',
            'country.fr.SK' => 'string',
            'country.fr.SI' => 'string',
            'country.fr.SO' => 'string',
            'country.fr.SD' => 'string',
            'country.fr.SS' => 'string',
            'country.fr.LK' => 'string',
            'country.fr.SE' => 'string',
            'country.fr.CH' => 'string',
            'country.fr.SR' => 'string',
            'country.fr.SJ' => 'string',
            'country.fr.SY' => 'string',
            'country.fr.TJ' => 'string',
            'country.fr.TW' => 'string',
            'country.fr.TZ' => 'string',
            'country.fr.TD' => 'string',
            'country.fr.CZ' => 'string',
            'country.fr.TF' => 'string',
            'country.fr.IO' => 'string',
            'country.fr.PS' => 'string',
            'country.fr.TH' => 'string',
            'country.fr.TL' => 'string',
            'country.fr.TG' => 'string',
            'country.fr.TK' => 'string',
            'country.fr.TO' => 'string',
            'country.fr.TT' => 'string',
            'country.fr.TN' => 'string',
            'country.fr.TM' => 'string',
            'country.fr.TR' => 'string',
            'country.fr.TV' => 'string',
            'country.fr.UA' => 'string',
            'country.fr.UY' => 'string',
            'country.fr.VU' => 'string',
            'country.fr.VE' => 'string',
            'country.fr.VN' => 'string',
            'country.fr.WF' => 'string',
            'country.fr.YE' => 'string',
            'country.fr.ZM' => 'string',
            'country.fr.ZW' => 'string',
            'country.en.AF' => 'string',
            'country.en.AX' => 'string',
            'country.en.AL' => 'string',
            'country.en.DZ' => 'string',
            'country.en.AS' => 'string',
            'country.en.AD' => 'string',
            'country.en.AO' => 'string',
            'country.en.AI' => 'string',
            'country.en.AQ' => 'string',
            'country.en.AG' => 'string',
            'country.en.AR' => 'string',
            'country.en.AM' => 'string',
            'country.en.AW' => 'string',
            'country.en.AU' => 'string',
            'country.en.AT' => 'string',
            'country.en.AZ' => 'string',
            'country.en.BS' => 'string',
            'country.en.BH' => 'string',
            'country.en.BD' => 'string',
            'country.en.BB' => 'string',
            'country.en.BY' => 'string',
            'country.en.BE' => 'string',
            'country.en.BZ' => 'string',
            'country.en.BJ' => 'string',
            'country.en.BM' => 'string',
            'country.en.BT' => 'string',
            'country.en.BO' => 'string',
            'country.en.BA' => 'string',
            'country.en.BW' => 'string',
            'country.en.BV' => 'string',
            'country.en.BR' => 'string',
            'country.en.IO' => 'string',
            'country.en.VG' => 'string',
            'country.en.BN' => 'string',
            'country.en.BG' => 'string',
            'country.en.BF' => 'string',
            'country.en.BI' => 'string',
            'country.en.KH' => 'string',
            'country.en.CM' => 'string',
            'country.en.CA' => 'string',
            'country.en.CV' => 'string',
            'country.en.BQ' => 'string',
            'country.en.KY' => 'string',
            'country.en.CF' => 'string',
            'country.en.TD' => 'string',
            'country.en.CL' => 'string',
            'country.en.CN' => 'string',
            'country.en.CX' => 'string',
            'country.en.CC' => 'string',
            'country.en.CO' => 'string',
            'country.en.KM' => 'string',
            'country.en.CG' => 'string',
            'country.en.CD' => 'string',
            'country.en.CK' => 'string',
            'country.en.CR' => 'string',
            'country.en.CI' => 'string',
            'country.en.HR' => 'string',
            'country.en.CU' => 'string',
            'country.en.CW' => 'string',
            'country.en.CY' => 'string',
            'country.en.CZ' => 'string',
            'country.en.DK' => 'string',
            'country.en.DJ' => 'string',
            'country.en.DM' => 'string',
            'country.en.DO' => 'string',
            'country.en.EC' => 'string',
            'country.en.EG' => 'string',
            'country.en.SV' => 'string',
            'country.en.GQ' => 'string',
            'country.en.ER' => 'string',
            'country.en.EE' => 'string',
            'country.en.SZ' => 'string',
            'country.en.ET' => 'string',
            'country.en.FK' => 'string',
            'country.en.FO' => 'string',
            'country.en.FJ' => 'string',
            'country.en.FI' => 'string',
            'country.en.FR' => 'string',
            'country.en.GF' => 'string',
            'country.en.PF' => 'string',
            'country.en.TF' => 'string',
            'country.en.GA' => 'string',
            'country.en.GM' => 'string',
            'country.en.GE' => 'string',
            'country.en.DE' => 'string',
            'country.en.GH' => 'string',
            'country.en.GI' => 'string',
            'country.en.GR' => 'string',
            'country.en.GL' => 'string',
            'country.en.GD' => 'string',
            'country.en.GP' => 'string',
            'country.en.GU' => 'string',
            'country.en.GT' => 'string',
            'country.en.GG' => 'string',
            'country.en.GN' => 'string',
            'country.en.GW' => 'string',
            'country.en.GY' => 'string',
            'country.en.HT' => 'string',
            'country.en.HM' => 'string',
            'country.en.HN' => 'string',
            'country.en.HK' => 'string',
            'country.en.HU' => 'string',
            'country.en.IS' => 'string',
            'country.en.IN' => 'string',
            'country.en.ID' => 'string',
            'country.en.IR' => 'string',
            'country.en.IQ' => 'string',
            'country.en.IE' => 'string',
            'country.en.IM' => 'string',
            'country.en.IL' => 'string',
            'country.en.IT' => 'string',
            'country.en.JM' => 'string',
            'country.en.JP' => 'string',
            'country.en.JE' => 'string',
            'country.en.JO' => 'string',
            'country.en.KZ' => 'string',
            'country.en.KE' => 'string',
            'country.en.KI' => 'string',
            'country.en.KW' => 'string',
            'country.en.KG' => 'string',
            'country.en.LA' => 'string',
            'country.en.LV' => 'string',
            'country.en.LB' => 'string',
            'country.en.LS' => 'string',
            'country.en.LR' => 'string',
            'country.en.LY' => 'string',
            'country.en.LI' => 'string',
            'country.en.LT' => 'string',
            'country.en.LU' => 'string',
            'country.en.MO' => 'string',
            'country.en.MG' => 'string',
            'country.en.MW' => 'string',
            'country.en.MY' => 'string',
            'country.en.MV' => 'string',
            'country.en.ML' => 'string',
            'country.en.MT' => 'string',
            'country.en.MH' => 'string',
            'country.en.MQ' => 'string',
            'country.en.MR' => 'string',
            'country.en.MU' => 'string',
            'country.en.YT' => 'string',
            'country.en.MX' => 'string',
            'country.en.FM' => 'string',
            'country.en.MD' => 'string',
            'country.en.MC' => 'string',
            'country.en.MN' => 'string',
            'country.en.ME' => 'string',
            'country.en.MS' => 'string',
            'country.en.MA' => 'string',
            'country.en.MZ' => 'string',
            'country.en.MM' => 'string',
            'country.en.NA' => 'string',
            'country.en.NR' => 'string',
            'country.en.NP' => 'string',
            'country.en.NL' => 'string',
            'country.en.NC' => 'string',
            'country.en.NZ' => 'string',
            'country.en.NI' => 'string',
            'country.en.NE' => 'string',
            'country.en.NG' => 'string',
            'country.en.NU' => 'string',
            'country.en.NF' => 'string',
            'country.en.KP' => 'string',
            'country.en.MK' => 'string',
            'country.en.MP' => 'string',
            'country.en.NO' => 'string',
            'country.en.OM' => 'string',
            'country.en.PK' => 'string',
            'country.en.PW' => 'string',
            'country.en.PS' => 'string',
            'country.en.PA' => 'string',
            'country.en.PG' => 'string',
            'country.en.PY' => 'string',
            'country.en.PE' => 'string',
            'country.en.PH' => 'string',
            'country.en.PN' => 'string',
            'country.en.PL' => 'string',
            'country.en.PT' => 'string',
            'country.en.PR' => 'string',
            'country.en.QA' => 'string',
            'country.en.RE' => 'string',
            'country.en.RO' => 'string',
            'country.en.RU' => 'string',
            'country.en.RW' => 'string',
            'country.en.WS' => 'string',
            'country.en.SM' => 'string',
            'country.en.ST' => 'string',
            'country.en.SA' => 'string',
            'country.en.SN' => 'string',
            'country.en.RS' => 'string',
            'country.en.SC' => 'string',
            'country.en.SL' => 'string',
            'country.en.SG' => 'string',
            'country.en.SX' => 'string',
            'country.en.SK' => 'string',
            'country.en.SI' => 'string',
            'country.en.SB' => 'string',
            'country.en.SO' => 'string',
            'country.en.ZA' => 'string',
            'country.en.GS' => 'string',
            'country.en.KR' => 'string',
            'country.en.SS' => 'string',
            'country.en.ES' => 'string',
            'country.en.LK' => 'string',
            'country.en.BL' => 'string',
            'country.en.SH' => 'string',
            'country.en.KN' => 'string',
            'country.en.LC' => 'string',
            'country.en.MF' => 'string',
            'country.en.PM' => 'string',
            'country.en.VC' => 'string',
            'country.en.SD' => 'string',
            'country.en.SR' => 'string',
            'country.en.SJ' => 'string',
            'country.en.SE' => 'string',
            'country.en.CH' => 'string',
            'country.en.SY' => 'string',
            'country.en.TW' => 'string',
            'country.en.TJ' => 'string',
            'country.en.TZ' => 'string',
            'country.en.TH' => 'string',
            'country.en.TL' => 'string',
            'country.en.TG' => 'string',
            'country.en.TK' => 'string',
            'country.en.TO' => 'string',
            'country.en.TT' => 'string',
            'country.en.TN' => 'string',
            'country.en.TR' => 'string',
            'country.en.TM' => 'string',
            'country.en.TC' => 'string',
            'country.en.TV' => 'string',
            'country.en.UM' => 'string',
            'country.en.VI' => 'string',
            'country.en.UG' => 'string',
            'country.en.UA' => 'string',
            'country.en.AE' => 'string',
            'country.en.GB' => 'string',
            'country.en.US' => 'string',
            'country.en.UY' => 'string',
            'country.en.UZ' => 'string',
            'country.en.VU' => 'string',
            'country.en.VA' => 'string',
            'country.en.VE' => 'string',
            'country.en.VN' => 'string',
            'country.en.WF' => 'string',
            'country.en.EH' => 'string',
            'country.en.YE' => 'string',
            'country.en.ZM' => 'string',
            'country.en.ZW' => 'string',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.local.report' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.public.report' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.disks.s3.report' => 'boolean',
            'filesystems.links.C:\Users\HP\Herd\ecom\public\storage' => 'string',
            'fortify.guard' => 'string',
            'fortify.middleware' => 'array',
            'fortify.auth_middleware' => 'string',
            'fortify.passwords' => 'string',
            'fortify.username' => 'string',
            'fortify.email' => 'string',
            'fortify.views' => 'boolean',
            'fortify.home' => 'string',
            'fortify.prefix' => 'string',
            'fortify.domain' => 'NULL',
            'fortify.lowercase_usernames' => 'boolean',
            'fortify.limiters.login' => 'string',
            'fortify.limiters.two-factor' => 'string',
            'fortify.paths.login' => 'NULL',
            'fortify.paths.logout' => 'NULL',
            'fortify.paths.password.request' => 'NULL',
            'fortify.paths.password.reset' => 'NULL',
            'fortify.paths.password.email' => 'NULL',
            'fortify.paths.password.update' => 'NULL',
            'fortify.paths.password.confirm' => 'NULL',
            'fortify.paths.password.confirmation' => 'NULL',
            'fortify.paths.register' => 'NULL',
            'fortify.paths.verification.notice' => 'NULL',
            'fortify.paths.verification.verify' => 'NULL',
            'fortify.paths.verification.send' => 'NULL',
            'fortify.paths.user-profile-information.update' => 'NULL',
            'fortify.paths.user-password.update' => 'NULL',
            'fortify.paths.two-factor.login' => 'NULL',
            'fortify.paths.two-factor.enable' => 'NULL',
            'fortify.paths.two-factor.confirm' => 'NULL',
            'fortify.paths.two-factor.disable' => 'NULL',
            'fortify.paths.two-factor.qr-code' => 'NULL',
            'fortify.paths.two-factor.secret-key' => 'NULL',
            'fortify.paths.two-factor.recovery-codes' => 'NULL',
            'fortify.redirects.login' => 'NULL',
            'fortify.redirects.logout' => 'NULL',
            'fortify.redirects.password-confirmation' => 'NULL',
            'fortify.redirects.register' => 'NULL',
            'fortify.redirects.email-verification' => 'NULL',
            'fortify.redirects.password-reset' => 'NULL',
            'fortify.features' => 'array',
            'jetstream.stack' => 'string',
            'jetstream.middleware' => 'array',
            'jetstream.features' => 'array',
            'jetstream.profile_photo_disk' => 'string',
            'jetstream.auth_session' => 'string',
            'jetstream.guard' => 'string',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'array',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.handler_with.stream' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.processors' => 'array',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'logging.channels.user_events.driver' => 'string',
            'logging.channels.user_events.path' => 'string',
            'logging.channels.user_events.level' => 'string',
            'logging.channels.user_errors.driver' => 'string',
            'logging.channels.user_errors.path' => 'string',
            'logging.channels.user_errors.level' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.failover.retry_after' => 'integer',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.mailers.roundrobin.retry_after' => 'integer',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'permission.models.permission' => 'string',
            'permission.models.role' => 'string',
            'permission.table_names.roles' => 'string',
            'permission.table_names.permissions' => 'string',
            'permission.table_names.model_has_permissions' => 'string',
            'permission.table_names.model_has_roles' => 'string',
            'permission.table_names.role_has_permissions' => 'string',
            'permission.column_names.role_pivot_key' => 'NULL',
            'permission.column_names.permission_pivot_key' => 'NULL',
            'permission.column_names.model_morph_key' => 'string',
            'permission.column_names.team_foreign_key' => 'string',
            'permission.register_permission_check_method' => 'boolean',
            'permission.register_octane_reset_listener' => 'boolean',
            'permission.events_enabled' => 'boolean',
            'permission.teams' => 'boolean',
            'permission.team_resolver' => 'string',
            'permission.use_passport_client_credentials' => 'boolean',
            'permission.display_permission_in_exception' => 'boolean',
            'permission.display_role_in_exception' => 'boolean',
            'permission.enable_wildcard_permission' => 'boolean',
            'permission.cache.expiration_time' => 'object',
            'permission.cache.key' => 'string',
            'permission.cache.store' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'sanctum.stateful' => 'array',
            'sanctum.guard' => 'array',
            'sanctum.expiration' => 'NULL',
            'sanctum.token_prefix' => 'string',
            'sanctum.middleware.authenticate_session' => 'string',
            'sanctum.middleware.encrypt_cookies' => 'string',
            'sanctum.middleware.validate_csrf_token' => 'string',
            'services.postmark.token' => 'NULL',
            'services.resend.key' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'integer',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.bcrypt.limit' => 'NULL',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'debugbar.enabled' => 'NULL',
            'debugbar.hide_empty_tabs' => 'boolean',
            'debugbar.except' => 'array',
            'debugbar.storage.enabled' => 'boolean',
            'debugbar.storage.open' => 'NULL',
            'debugbar.storage.driver' => 'string',
            'debugbar.storage.path' => 'string',
            'debugbar.storage.connection' => 'NULL',
            'debugbar.storage.provider' => 'string',
            'debugbar.storage.hostname' => 'string',
            'debugbar.storage.port' => 'integer',
            'debugbar.editor' => 'string',
            'debugbar.remote_sites_path' => 'NULL',
            'debugbar.local_sites_path' => 'NULL',
            'debugbar.include_vendors' => 'boolean',
            'debugbar.capture_ajax' => 'boolean',
            'debugbar.add_ajax_timing' => 'boolean',
            'debugbar.ajax_handler_auto_show' => 'boolean',
            'debugbar.ajax_handler_enable_tab' => 'boolean',
            'debugbar.defer_datasets' => 'boolean',
            'debugbar.error_handler' => 'boolean',
            'debugbar.clockwork' => 'boolean',
            'debugbar.collectors.phpinfo' => 'boolean',
            'debugbar.collectors.messages' => 'boolean',
            'debugbar.collectors.time' => 'boolean',
            'debugbar.collectors.memory' => 'boolean',
            'debugbar.collectors.exceptions' => 'boolean',
            'debugbar.collectors.log' => 'boolean',
            'debugbar.collectors.db' => 'boolean',
            'debugbar.collectors.views' => 'boolean',
            'debugbar.collectors.route' => 'boolean',
            'debugbar.collectors.auth' => 'boolean',
            'debugbar.collectors.gate' => 'boolean',
            'debugbar.collectors.session' => 'boolean',
            'debugbar.collectors.symfony_request' => 'boolean',
            'debugbar.collectors.mail' => 'boolean',
            'debugbar.collectors.laravel' => 'boolean',
            'debugbar.collectors.events' => 'boolean',
            'debugbar.collectors.default_request' => 'boolean',
            'debugbar.collectors.logs' => 'boolean',
            'debugbar.collectors.files' => 'boolean',
            'debugbar.collectors.config' => 'boolean',
            'debugbar.collectors.cache' => 'boolean',
            'debugbar.collectors.models' => 'boolean',
            'debugbar.collectors.livewire' => 'boolean',
            'debugbar.collectors.jobs' => 'boolean',
            'debugbar.collectors.pennant' => 'boolean',
            'debugbar.options.time.memory_usage' => 'boolean',
            'debugbar.options.messages.trace' => 'boolean',
            'debugbar.options.messages.capture_dumps' => 'boolean',
            'debugbar.options.memory.reset_peak' => 'boolean',
            'debugbar.options.memory.with_baseline' => 'boolean',
            'debugbar.options.memory.precision' => 'integer',
            'debugbar.options.auth.show_name' => 'boolean',
            'debugbar.options.auth.show_guards' => 'boolean',
            'debugbar.options.db.with_params' => 'boolean',
            'debugbar.options.db.exclude_paths' => 'array',
            'debugbar.options.db.backtrace' => 'boolean',
            'debugbar.options.db.backtrace_exclude_paths' => 'array',
            'debugbar.options.db.timeline' => 'boolean',
            'debugbar.options.db.duration_background' => 'boolean',
            'debugbar.options.db.explain.enabled' => 'boolean',
            'debugbar.options.db.hints' => 'boolean',
            'debugbar.options.db.show_copy' => 'boolean',
            'debugbar.options.db.slow_threshold' => 'boolean',
            'debugbar.options.db.memory_usage' => 'boolean',
            'debugbar.options.db.soft_limit' => 'integer',
            'debugbar.options.db.hard_limit' => 'integer',
            'debugbar.options.mail.timeline' => 'boolean',
            'debugbar.options.mail.show_body' => 'boolean',
            'debugbar.options.views.timeline' => 'boolean',
            'debugbar.options.views.data' => 'boolean',
            'debugbar.options.views.group' => 'integer',
            'debugbar.options.views.exclude_paths' => 'array',
            'debugbar.options.route.label' => 'boolean',
            'debugbar.options.session.hiddens' => 'array',
            'debugbar.options.symfony_request.label' => 'boolean',
            'debugbar.options.symfony_request.hiddens' => 'array',
            'debugbar.options.events.data' => 'boolean',
            'debugbar.options.logs.file' => 'NULL',
            'debugbar.options.cache.values' => 'boolean',
            'debugbar.inject' => 'boolean',
            'debugbar.route_prefix' => 'string',
            'debugbar.route_middleware' => 'array',
            'debugbar.route_domain' => 'NULL',
            'debugbar.theme' => 'string',
            'debugbar.debug_backtrace_limit' => 'integer',
            'livewire.class_namespace' => 'string',
            'livewire.view_path' => 'string',
            'livewire.layout' => 'string',
            'livewire.lazy_placeholder' => 'NULL',
            'livewire.temporary_file_upload.disk' => 'NULL',
            'livewire.temporary_file_upload.rules' => 'NULL',
            'livewire.temporary_file_upload.directory' => 'NULL',
            'livewire.temporary_file_upload.middleware' => 'NULL',
            'livewire.temporary_file_upload.preview_mimes' => 'array',
            'livewire.temporary_file_upload.max_upload_time' => 'integer',
            'livewire.temporary_file_upload.cleanup' => 'boolean',
            'livewire.render_on_redirect' => 'boolean',
            'livewire.legacy_model_binding' => 'boolean',
            'livewire.inject_assets' => 'boolean',
            'livewire.navigate.show_progress_bar' => 'boolean',
            'livewire.navigate.progress_bar_color' => 'string',
            'livewire.inject_morph_markers' => 'boolean',
            'livewire.pagination_theme' => 'string',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'array',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));


    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::mock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::partialMock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::instance(0), type(1));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::spy(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Support\Arr::add(0), type(0));
    override(\Illuminate\Support\Arr::except(0), type(0));
    override(\Illuminate\Support\Arr::first(0), elementType(0));
    override(\Illuminate\Support\Arr::last(0), elementType(0));
    override(\Illuminate\Support\Arr::get(0), elementType(0));
    override(\Illuminate\Support\Arr::only(0), type(0));
    override(\Illuminate\Support\Arr::prepend(0), type(0));
    override(\Illuminate\Support\Arr::pull(0), elementType(0));
    override(\Illuminate\Support\Arr::set(0), type(0));
    override(\Illuminate\Support\Arr::shuffle(0), type(0));
    override(\Illuminate\Support\Arr::sort(0), type(0));
    override(\Illuminate\Support\Arr::sortRecursive(0), type(0));
    override(\Illuminate\Support\Arr::where(0), type(0));
    override(\array_add(0), type(0));
    override(\array_except(0), type(0));
    override(\array_first(0), elementType(0));
    override(\array_last(0), elementType(0));
    override(\array_get(0), elementType(0));
    override(\array_only(0), type(0));
    override(\array_prepend(0), type(0));
    override(\array_pull(0), elementType(0));
    override(\array_set(0), type(0));
    override(\array_sort(0), type(0));
    override(\array_sort_recursive(0), type(0));
    override(\array_where(0), type(0));
    override(\head(0), elementType(0));
    override(\last(0), elementType(0));
    override(\with(0), type(0));
    override(\tap(0), type(0));
    override(\optional(0), type(0));

            registerArgumentsSet('auth', );
        registerArgumentsSet('configs', 
'app.name','app.env','app.debug','app.url','app.frontend_url',
'app.asset_url','app.timezone','app.locale','app.fallback_locale','app.faker_locale',
'app.cipher','app.key','app.previous_keys','app.maintenance.driver','app.maintenance.store',
'app.providers','app.aliases.App','app.aliases.Arr','app.aliases.Artisan','app.aliases.Auth',
'app.aliases.Blade','app.aliases.Broadcast','app.aliases.Bus','app.aliases.Cache','app.aliases.Concurrency',
'app.aliases.Config','app.aliases.Context','app.aliases.Cookie','app.aliases.Crypt','app.aliases.Date',
'app.aliases.DB','app.aliases.Eloquent','app.aliases.Event','app.aliases.File','app.aliases.Gate',
'app.aliases.Hash','app.aliases.Http','app.aliases.Js','app.aliases.Lang','app.aliases.Log',
'app.aliases.Mail','app.aliases.Notification','app.aliases.Number','app.aliases.Password','app.aliases.Process',
'app.aliases.Queue','app.aliases.RateLimiter','app.aliases.Redirect','app.aliases.Request','app.aliases.Response',
'app.aliases.Route','app.aliases.Schedule','app.aliases.Schema','app.aliases.Session','app.aliases.Storage',
'app.aliases.Str','app.aliases.URL','app.aliases.Uri','app.aliases.Validator','app.aliases.View',
'app.aliases.Vite','auth.defaults.guard','auth.defaults.passwords','auth.guards.web.driver','auth.guards.web.provider',
'auth.guards.sanctum.driver','auth.guards.sanctum.provider','auth.providers.users.driver','auth.providers.users.model','auth.passwords.users.provider',
'auth.passwords.users.table','auth.passwords.users.expire','auth.passwords.users.throttle','auth.password_timeout','cache.default',
'cache.stores.array.driver','cache.stores.array.serialize','cache.stores.database.driver','cache.stores.database.connection','cache.stores.database.table',
'cache.stores.database.lock_connection','cache.stores.database.lock_table','cache.stores.file.driver','cache.stores.file.path','cache.stores.file.lock_path',
'cache.stores.memcached.driver','cache.stores.memcached.persistent_id','cache.stores.memcached.sasl','cache.stores.memcached.options','cache.stores.memcached.servers.0.host',
'cache.stores.memcached.servers.0.port','cache.stores.memcached.servers.0.weight','cache.stores.redis.driver','cache.stores.redis.connection','cache.stores.redis.lock_connection',
'cache.stores.dynamodb.driver','cache.stores.dynamodb.key','cache.stores.dynamodb.secret','cache.stores.dynamodb.region','cache.stores.dynamodb.table',
'cache.stores.dynamodb.endpoint','cache.stores.octane.driver','cache.prefix','country.fr.AF','country.fr.ZA',
'country.fr.AL','country.fr.DZ','country.fr.DE','country.fr.AD','country.fr.AO',
'country.fr.AI','country.fr.AQ','country.fr.AG','country.fr.SA','country.fr.AR',
'country.fr.AM','country.fr.AW','country.fr.AU','country.fr.AT','country.fr.AZ',
'country.fr.BS','country.fr.BH','country.fr.BD','country.fr.BB','country.fr.BE',
'country.fr.BZ','country.fr.BJ','country.fr.BM','country.fr.BT','country.fr.BY',
'country.fr.BO','country.fr.BA','country.fr.BW','country.fr.BR','country.fr.BN',
'country.fr.BG','country.fr.BF','country.fr.BI','country.fr.KH','country.fr.CM',
'country.fr.CA','country.fr.CV','country.fr.CL','country.fr.CN','country.fr.CY',
'country.fr.CO','country.fr.KM','country.fr.CG','country.fr.CD','country.fr.KP',
'country.fr.KR','country.fr.CR','country.fr.CI','country.fr.HR','country.fr.CU',
'country.fr.CW','country.fr.DK','country.fr.DJ','country.fr.DM','country.fr.EG',
'country.fr.AE','country.fr.EC','country.fr.ER','country.fr.ES','country.fr.EE',
'country.fr.SZ','country.fr.VA','country.fr.FM','country.fr.US','country.fr.ET',
'country.fr.FJ','country.fr.FI','country.fr.FR','country.fr.GA','country.fr.GM',
'country.fr.GE','country.fr.GS','country.fr.GH','country.fr.GI','country.fr.GR',
'country.fr.GD','country.fr.GL','country.fr.GP','country.fr.GU','country.fr.GT',
'country.fr.GG','country.fr.GN','country.fr.GQ','country.fr.GW','country.fr.GY',
'country.fr.GF','country.fr.HT','country.fr.HN','country.fr.HU','country.fr.BV',
'country.fr.CX','country.fr.IM','country.fr.NF','country.fr.AX','country.fr.KY',
'country.fr.CC','country.fr.CK','country.fr.FO','country.fr.HM','country.fr.FK',
'country.fr.MP','country.fr.MH','country.fr.UM','country.fr.PN','country.fr.SB',
'country.fr.TC','country.fr.VG','country.fr.VI','country.fr.IN','country.fr.ID',
'country.fr.IQ','country.fr.IR','country.fr.IE','country.fr.IS','country.fr.IL',
'country.fr.IT','country.fr.JM','country.fr.JP','country.fr.JE','country.fr.JO',
'country.fr.KZ','country.fr.KE','country.fr.KG','country.fr.KI','country.fr.KW',
'country.fr.RE','country.fr.LA','country.fr.LS','country.fr.LV','country.fr.LB',
'country.fr.LR','country.fr.LY','country.fr.LI','country.fr.LT','country.fr.LU',
'country.fr.MK','country.fr.MG','country.fr.MY','country.fr.MW','country.fr.MV',
'country.fr.ML','country.fr.MT','country.fr.MA','country.fr.MQ','country.fr.MU',
'country.fr.MR','country.fr.YT','country.fr.MX','country.fr.MD','country.fr.MC',
'country.fr.MN','country.fr.ME','country.fr.MS','country.fr.MZ','country.fr.MM',
'country.fr.NA','country.fr.NR','country.fr.NP','country.fr.NI','country.fr.NE',
'country.fr.NG','country.fr.NU','country.fr.NO','country.fr.NC','country.fr.NZ',
'country.fr.OM','country.fr.UG','country.fr.UZ','country.fr.PK','country.fr.PW',
'country.fr.PA','country.fr.PG','country.fr.PY','country.fr.NL','country.fr.BQ',
'country.fr.PE','country.fr.PH','country.fr.PL','country.fr.PF','country.fr.PR',
'country.fr.PT','country.fr.QA','country.fr.HK','country.fr.MO','country.fr.CF',
'country.fr.DO','country.fr.RO','country.fr.GB','country.fr.RU','country.fr.RW',
'country.fr.EH','country.fr.BL','country.fr.KN','country.fr.SM','country.fr.MF',
'country.fr.SX','country.fr.PM','country.fr.VC','country.fr.SH','country.fr.LC',
'country.fr.SV','country.fr.WS','country.fr.AS','country.fr.ST','country.fr.SN',
'country.fr.RS','country.fr.SC','country.fr.SL','country.fr.SG','country.fr.SK',
'country.fr.SI','country.fr.SO','country.fr.SD','country.fr.SS','country.fr.LK',
'country.fr.SE','country.fr.CH','country.fr.SR','country.fr.SJ','country.fr.SY',
'country.fr.TJ','country.fr.TW','country.fr.TZ','country.fr.TD','country.fr.CZ',
'country.fr.TF','country.fr.IO','country.fr.PS','country.fr.TH','country.fr.TL',
'country.fr.TG','country.fr.TK','country.fr.TO','country.fr.TT','country.fr.TN',
'country.fr.TM','country.fr.TR','country.fr.TV','country.fr.UA','country.fr.UY',
'country.fr.VU','country.fr.VE','country.fr.VN','country.fr.WF','country.fr.YE',
'country.fr.ZM','country.fr.ZW','country.en.AF','country.en.AX','country.en.AL',
'country.en.DZ','country.en.AS','country.en.AD','country.en.AO','country.en.AI',
'country.en.AQ','country.en.AG','country.en.AR','country.en.AM','country.en.AW',
'country.en.AU','country.en.AT','country.en.AZ','country.en.BS','country.en.BH',
'country.en.BD','country.en.BB','country.en.BY','country.en.BE','country.en.BZ',
'country.en.BJ','country.en.BM','country.en.BT','country.en.BO','country.en.BA',
'country.en.BW','country.en.BV','country.en.BR','country.en.IO','country.en.VG',
'country.en.BN','country.en.BG','country.en.BF','country.en.BI','country.en.KH',
'country.en.CM','country.en.CA','country.en.CV','country.en.BQ','country.en.KY',
'country.en.CF','country.en.TD','country.en.CL','country.en.CN','country.en.CX',
'country.en.CC','country.en.CO','country.en.KM','country.en.CG','country.en.CD',
'country.en.CK','country.en.CR','country.en.CI','country.en.HR','country.en.CU',
'country.en.CW','country.en.CY','country.en.CZ','country.en.DK','country.en.DJ',
'country.en.DM','country.en.DO','country.en.EC','country.en.EG','country.en.SV',
'country.en.GQ','country.en.ER','country.en.EE','country.en.SZ','country.en.ET',
'country.en.FK','country.en.FO','country.en.FJ','country.en.FI','country.en.FR',
'country.en.GF','country.en.PF','country.en.TF','country.en.GA','country.en.GM',
'country.en.GE','country.en.DE','country.en.GH','country.en.GI','country.en.GR',
'country.en.GL','country.en.GD','country.en.GP','country.en.GU','country.en.GT',
'country.en.GG','country.en.GN','country.en.GW','country.en.GY','country.en.HT',
'country.en.HM','country.en.HN','country.en.HK','country.en.HU','country.en.IS',
'country.en.IN','country.en.ID','country.en.IR','country.en.IQ','country.en.IE',
'country.en.IM','country.en.IL','country.en.IT','country.en.JM','country.en.JP',
'country.en.JE','country.en.JO','country.en.KZ','country.en.KE','country.en.KI',
'country.en.KW','country.en.KG','country.en.LA','country.en.LV','country.en.LB',
'country.en.LS','country.en.LR','country.en.LY','country.en.LI','country.en.LT',
'country.en.LU','country.en.MO','country.en.MG','country.en.MW','country.en.MY',
'country.en.MV','country.en.ML','country.en.MT','country.en.MH','country.en.MQ',
'country.en.MR','country.en.MU','country.en.YT','country.en.MX','country.en.FM',
'country.en.MD','country.en.MC','country.en.MN','country.en.ME','country.en.MS',
'country.en.MA','country.en.MZ','country.en.MM','country.en.NA','country.en.NR',
'country.en.NP','country.en.NL','country.en.NC','country.en.NZ','country.en.NI',
'country.en.NE','country.en.NG','country.en.NU','country.en.NF','country.en.KP',
'country.en.MK','country.en.MP','country.en.NO','country.en.OM','country.en.PK',
'country.en.PW','country.en.PS','country.en.PA','country.en.PG','country.en.PY',
'country.en.PE','country.en.PH','country.en.PN','country.en.PL','country.en.PT',
'country.en.PR','country.en.QA','country.en.RE','country.en.RO','country.en.RU',
'country.en.RW','country.en.WS','country.en.SM','country.en.ST','country.en.SA',
'country.en.SN','country.en.RS','country.en.SC','country.en.SL','country.en.SG',
'country.en.SX','country.en.SK','country.en.SI','country.en.SB','country.en.SO',
'country.en.ZA','country.en.GS','country.en.KR','country.en.SS','country.en.ES',
'country.en.LK','country.en.BL','country.en.SH','country.en.KN','country.en.LC',
'country.en.MF','country.en.PM','country.en.VC','country.en.SD','country.en.SR',
'country.en.SJ','country.en.SE','country.en.CH','country.en.SY','country.en.TW',
'country.en.TJ','country.en.TZ','country.en.TH','country.en.TL','country.en.TG',
'country.en.TK','country.en.TO','country.en.TT','country.en.TN','country.en.TR',
'country.en.TM','country.en.TC','country.en.TV','country.en.UM','country.en.VI',
'country.en.UG','country.en.UA','country.en.AE','country.en.GB','country.en.US',
'country.en.UY','country.en.UZ','country.en.VU','country.en.VA','country.en.VE',
'country.en.VN','country.en.WF','country.en.EH','country.en.YE','country.en.ZM',
'country.en.ZW','database.default','database.connections.sqlite.driver','database.connections.sqlite.url','database.connections.sqlite.database',
'database.connections.sqlite.prefix','database.connections.sqlite.foreign_key_constraints','database.connections.sqlite.busy_timeout','database.connections.sqlite.journal_mode','database.connections.sqlite.synchronous',
'database.connections.mysql.driver','database.connections.mysql.url','database.connections.mysql.host','database.connections.mysql.port','database.connections.mysql.database',
'database.connections.mysql.username','database.connections.mysql.password','database.connections.mysql.unix_socket','database.connections.mysql.charset','database.connections.mysql.collation',
'database.connections.mysql.prefix','database.connections.mysql.prefix_indexes','database.connections.mysql.strict','database.connections.mysql.engine','database.connections.mysql.options',
'database.connections.mariadb.driver','database.connections.mariadb.url','database.connections.mariadb.host','database.connections.mariadb.port','database.connections.mariadb.database',
'database.connections.mariadb.username','database.connections.mariadb.password','database.connections.mariadb.unix_socket','database.connections.mariadb.charset','database.connections.mariadb.collation',
'database.connections.mariadb.prefix','database.connections.mariadb.prefix_indexes','database.connections.mariadb.strict','database.connections.mariadb.engine','database.connections.mariadb.options',
'database.connections.pgsql.driver','database.connections.pgsql.url','database.connections.pgsql.host','database.connections.pgsql.port','database.connections.pgsql.database',
'database.connections.pgsql.username','database.connections.pgsql.password','database.connections.pgsql.charset','database.connections.pgsql.prefix','database.connections.pgsql.prefix_indexes',
'database.connections.pgsql.search_path','database.connections.pgsql.sslmode','database.connections.sqlsrv.driver','database.connections.sqlsrv.url','database.connections.sqlsrv.host',
'database.connections.sqlsrv.port','database.connections.sqlsrv.database','database.connections.sqlsrv.username','database.connections.sqlsrv.password','database.connections.sqlsrv.charset',
'database.connections.sqlsrv.prefix','database.connections.sqlsrv.prefix_indexes','database.migrations.table','database.migrations.update_date_on_publish','database.redis.client',
'database.redis.options.cluster','database.redis.options.prefix','database.redis.options.persistent','database.redis.default.url','database.redis.default.host',
'database.redis.default.username','database.redis.default.password','database.redis.default.port','database.redis.default.database','database.redis.cache.url',
'database.redis.cache.host','database.redis.cache.username','database.redis.cache.password','database.redis.cache.port','database.redis.cache.database',
'filesystems.default','filesystems.disks.local.driver','filesystems.disks.local.root','filesystems.disks.local.serve','filesystems.disks.local.throw',
'filesystems.disks.local.report','filesystems.disks.public.driver','filesystems.disks.public.root','filesystems.disks.public.url','filesystems.disks.public.visibility',
'filesystems.disks.public.throw','filesystems.disks.public.report','filesystems.disks.s3.driver','filesystems.disks.s3.key','filesystems.disks.s3.secret',
'filesystems.disks.s3.region','filesystems.disks.s3.bucket','filesystems.disks.s3.url','filesystems.disks.s3.endpoint','filesystems.disks.s3.use_path_style_endpoint',
'filesystems.disks.s3.throw','filesystems.disks.s3.report','filesystems.links.C:\\Users\\HP\\Herd\\ecom\\public\\storage','fortify.guard','fortify.middleware',
'fortify.auth_middleware','fortify.passwords','fortify.username','fortify.email','fortify.views',
'fortify.home','fortify.prefix','fortify.domain','fortify.lowercase_usernames','fortify.limiters.login',
'fortify.limiters.two-factor','fortify.paths.login','fortify.paths.logout','fortify.paths.password.request','fortify.paths.password.reset',
'fortify.paths.password.email','fortify.paths.password.update','fortify.paths.password.confirm','fortify.paths.password.confirmation','fortify.paths.register',
'fortify.paths.verification.notice','fortify.paths.verification.verify','fortify.paths.verification.send','fortify.paths.user-profile-information.update','fortify.paths.user-password.update',
'fortify.paths.two-factor.login','fortify.paths.two-factor.enable','fortify.paths.two-factor.confirm','fortify.paths.two-factor.disable','fortify.paths.two-factor.qr-code',
'fortify.paths.two-factor.secret-key','fortify.paths.two-factor.recovery-codes','fortify.redirects.login','fortify.redirects.logout','fortify.redirects.password-confirmation',
'fortify.redirects.register','fortify.redirects.email-verification','fortify.redirects.password-reset','fortify.features','jetstream.stack',
'jetstream.middleware','jetstream.features','jetstream.profile_photo_disk','jetstream.auth_session','jetstream.guard',
'logging.default','logging.deprecations.channel','logging.deprecations.trace','logging.channels.stack.driver','logging.channels.stack.channels',
'logging.channels.stack.ignore_exceptions','logging.channels.single.driver','logging.channels.single.path','logging.channels.single.level','logging.channels.single.replace_placeholders',
'logging.channels.daily.driver','logging.channels.daily.path','logging.channels.daily.level','logging.channels.daily.days','logging.channels.daily.replace_placeholders',
'logging.channels.slack.driver','logging.channels.slack.url','logging.channels.slack.username','logging.channels.slack.emoji','logging.channels.slack.level',
'logging.channels.slack.replace_placeholders','logging.channels.papertrail.driver','logging.channels.papertrail.level','logging.channels.papertrail.handler','logging.channels.papertrail.handler_with.host',
'logging.channels.papertrail.handler_with.port','logging.channels.papertrail.handler_with.connectionString','logging.channels.papertrail.processors','logging.channels.stderr.driver','logging.channels.stderr.level',
'logging.channels.stderr.handler','logging.channels.stderr.handler_with.stream','logging.channels.stderr.formatter','logging.channels.stderr.processors','logging.channels.syslog.driver',
'logging.channels.syslog.level','logging.channels.syslog.facility','logging.channels.syslog.replace_placeholders','logging.channels.errorlog.driver','logging.channels.errorlog.level',
'logging.channels.errorlog.replace_placeholders','logging.channels.null.driver','logging.channels.null.handler','logging.channels.emergency.path','logging.channels.user_events.driver',
'logging.channels.user_events.path','logging.channels.user_events.level','logging.channels.user_errors.driver','logging.channels.user_errors.path','logging.channels.user_errors.level',
'mail.default','mail.mailers.smtp.transport','mail.mailers.smtp.scheme','mail.mailers.smtp.url','mail.mailers.smtp.host',
'mail.mailers.smtp.port','mail.mailers.smtp.username','mail.mailers.smtp.password','mail.mailers.smtp.timeout','mail.mailers.smtp.local_domain',
'mail.mailers.ses.transport','mail.mailers.postmark.transport','mail.mailers.resend.transport','mail.mailers.sendmail.transport','mail.mailers.sendmail.path',
'mail.mailers.log.transport','mail.mailers.log.channel','mail.mailers.array.transport','mail.mailers.failover.transport','mail.mailers.failover.mailers',
'mail.mailers.failover.retry_after','mail.mailers.roundrobin.transport','mail.mailers.roundrobin.mailers','mail.mailers.roundrobin.retry_after','mail.from.address',
'mail.from.name','mail.markdown.theme','mail.markdown.paths','permission.models.permission','permission.models.role',
'permission.table_names.roles','permission.table_names.permissions','permission.table_names.model_has_permissions','permission.table_names.model_has_roles','permission.table_names.role_has_permissions',
'permission.column_names.role_pivot_key','permission.column_names.permission_pivot_key','permission.column_names.model_morph_key','permission.column_names.team_foreign_key','permission.register_permission_check_method',
'permission.register_octane_reset_listener','permission.events_enabled','permission.teams','permission.team_resolver','permission.use_passport_client_credentials',
'permission.display_permission_in_exception','permission.display_role_in_exception','permission.enable_wildcard_permission','permission.cache.expiration_time','permission.cache.key',
'permission.cache.store','queue.default','queue.connections.sync.driver','queue.connections.database.driver','queue.connections.database.connection',
'queue.connections.database.table','queue.connections.database.queue','queue.connections.database.retry_after','queue.connections.database.after_commit','queue.connections.beanstalkd.driver',
'queue.connections.beanstalkd.host','queue.connections.beanstalkd.queue','queue.connections.beanstalkd.retry_after','queue.connections.beanstalkd.block_for','queue.connections.beanstalkd.after_commit',
'queue.connections.sqs.driver','queue.connections.sqs.key','queue.connections.sqs.secret','queue.connections.sqs.prefix','queue.connections.sqs.queue',
'queue.connections.sqs.suffix','queue.connections.sqs.region','queue.connections.sqs.after_commit','queue.connections.redis.driver','queue.connections.redis.connection',
'queue.connections.redis.queue','queue.connections.redis.retry_after','queue.connections.redis.block_for','queue.connections.redis.after_commit','queue.batching.database',
'queue.batching.table','queue.failed.driver','queue.failed.database','queue.failed.table','sanctum.stateful',
'sanctum.guard','sanctum.expiration','sanctum.token_prefix','sanctum.middleware.authenticate_session','sanctum.middleware.encrypt_cookies',
'sanctum.middleware.validate_csrf_token','services.postmark.token','services.resend.key','services.ses.key','services.ses.secret',
'services.ses.region','services.slack.notifications.bot_user_oauth_token','services.slack.notifications.channel','session.driver','session.lifetime',
'session.expire_on_close','session.encrypt','session.files','session.connection','session.table',
'session.store','session.lottery','session.cookie','session.path','session.domain',
'session.secure','session.http_only','session.same_site','session.partitioned','broadcasting.default',
'broadcasting.connections.reverb.driver','broadcasting.connections.reverb.key','broadcasting.connections.reverb.secret','broadcasting.connections.reverb.app_id','broadcasting.connections.reverb.options.host',
'broadcasting.connections.reverb.options.port','broadcasting.connections.reverb.options.scheme','broadcasting.connections.reverb.options.useTLS','broadcasting.connections.reverb.client_options','broadcasting.connections.pusher.driver',
'broadcasting.connections.pusher.key','broadcasting.connections.pusher.secret','broadcasting.connections.pusher.app_id','broadcasting.connections.pusher.options.cluster','broadcasting.connections.pusher.options.host',
'broadcasting.connections.pusher.options.port','broadcasting.connections.pusher.options.scheme','broadcasting.connections.pusher.options.encrypted','broadcasting.connections.pusher.options.useTLS','broadcasting.connections.pusher.client_options',
'broadcasting.connections.ably.driver','broadcasting.connections.ably.key','broadcasting.connections.log.driver','broadcasting.connections.null.driver','concurrency.default',
'cors.paths','cors.allowed_methods','cors.allowed_origins','cors.allowed_origins_patterns','cors.allowed_headers',
'cors.exposed_headers','cors.max_age','cors.supports_credentials','hashing.driver','hashing.bcrypt.rounds',
'hashing.bcrypt.verify','hashing.bcrypt.limit','hashing.argon.memory','hashing.argon.threads','hashing.argon.time',
'hashing.argon.verify','hashing.rehash_on_login','view.paths','view.compiled','debugbar.enabled',
'debugbar.hide_empty_tabs','debugbar.except','debugbar.storage.enabled','debugbar.storage.open','debugbar.storage.driver',
'debugbar.storage.path','debugbar.storage.connection','debugbar.storage.provider','debugbar.storage.hostname','debugbar.storage.port',
'debugbar.editor','debugbar.remote_sites_path','debugbar.local_sites_path','debugbar.include_vendors','debugbar.capture_ajax',
'debugbar.add_ajax_timing','debugbar.ajax_handler_auto_show','debugbar.ajax_handler_enable_tab','debugbar.defer_datasets','debugbar.error_handler',
'debugbar.clockwork','debugbar.collectors.phpinfo','debugbar.collectors.messages','debugbar.collectors.time','debugbar.collectors.memory',
'debugbar.collectors.exceptions','debugbar.collectors.log','debugbar.collectors.db','debugbar.collectors.views','debugbar.collectors.route',
'debugbar.collectors.auth','debugbar.collectors.gate','debugbar.collectors.session','debugbar.collectors.symfony_request','debugbar.collectors.mail',
'debugbar.collectors.laravel','debugbar.collectors.events','debugbar.collectors.default_request','debugbar.collectors.logs','debugbar.collectors.files',
'debugbar.collectors.config','debugbar.collectors.cache','debugbar.collectors.models','debugbar.collectors.livewire','debugbar.collectors.jobs',
'debugbar.collectors.pennant','debugbar.options.time.memory_usage','debugbar.options.messages.trace','debugbar.options.messages.capture_dumps','debugbar.options.memory.reset_peak',
'debugbar.options.memory.with_baseline','debugbar.options.memory.precision','debugbar.options.auth.show_name','debugbar.options.auth.show_guards','debugbar.options.db.with_params',
'debugbar.options.db.exclude_paths','debugbar.options.db.backtrace','debugbar.options.db.backtrace_exclude_paths','debugbar.options.db.timeline','debugbar.options.db.duration_background',
'debugbar.options.db.explain.enabled','debugbar.options.db.hints','debugbar.options.db.show_copy','debugbar.options.db.slow_threshold','debugbar.options.db.memory_usage',
'debugbar.options.db.soft_limit','debugbar.options.db.hard_limit','debugbar.options.mail.timeline','debugbar.options.mail.show_body','debugbar.options.views.timeline',
'debugbar.options.views.data','debugbar.options.views.group','debugbar.options.views.exclude_paths','debugbar.options.route.label','debugbar.options.session.hiddens',
'debugbar.options.symfony_request.label','debugbar.options.symfony_request.hiddens','debugbar.options.events.data','debugbar.options.logs.file','debugbar.options.cache.values',
'debugbar.inject','debugbar.route_prefix','debugbar.route_middleware','debugbar.route_domain','debugbar.theme',
'debugbar.debug_backtrace_limit','livewire.class_namespace','livewire.view_path','livewire.layout','livewire.lazy_placeholder',
'livewire.temporary_file_upload.disk','livewire.temporary_file_upload.rules','livewire.temporary_file_upload.directory','livewire.temporary_file_upload.middleware','livewire.temporary_file_upload.preview_mimes',
'livewire.temporary_file_upload.max_upload_time','livewire.temporary_file_upload.cleanup','livewire.render_on_redirect','livewire.legacy_model_binding','livewire.inject_assets',
'livewire.navigate.show_progress_bar','livewire.navigate.progress_bar_color','livewire.inject_morph_markers','livewire.pagination_theme','ide-helper.filename',
'ide-helper.models_filename','ide-helper.meta_filename','ide-helper.include_fluent','ide-helper.include_factory_builders','ide-helper.write_model_magic_where',
'ide-helper.write_model_external_builder_methods','ide-helper.write_model_relation_count_properties','ide-helper.write_eloquent_model_mixins','ide-helper.include_helpers','ide-helper.helper_files',
'ide-helper.model_locations','ide-helper.ignored_models','ide-helper.model_hooks','ide-helper.extra.Eloquent','ide-helper.extra.Session',
'ide-helper.magic','ide-helper.interfaces','ide-helper.model_camel_case_properties','ide-helper.type_overrides.integer','ide-helper.type_overrides.boolean',
'ide-helper.include_class_docblocks','ide-helper.force_fqn','ide-helper.use_generics_annotations','ide-helper.additional_relation_types','ide-helper.additional_relation_return_types',
'ide-helper.enforce_nullable_relationships','ide-helper.post_migrate','ide-helper.macroable_traits','tinker.commands','tinker.alias',
'tinker.dont_alias',);
        registerArgumentsSet('middleware', 
'web','api','auth','auth.basic','auth.session',
'cache.headers','can','guest','password.confirm','precognitive',
'signed','throttle','verified',);
        registerArgumentsSet('routes', 
'debugbar.openhandler','debugbar.clockwork','debugbar.assets.css','debugbar.assets.js','debugbar.cache.delete',
'debugbar.queries.explain','login','login.store','logout','password.request',
'password.reset','password.email','password.update','register','register.store',
'user-profile-information.update','user-password.update','password.confirm','password.confirmation','password.confirm.store',
'two-factor.login','two-factor.login.store','two-factor.enable','two-factor.confirm','two-factor.disable',
'two-factor.qr-code','two-factor.secret-key','two-factor.recovery-codes','profile.show',
'sanctum.csrf-cookie','livewire.update','livewire.upload-file',
'livewire.preview-file','dashboard',
'storage.local',);
        registerArgumentsSet('views', 
'api.api-token-manager','api.index','auth.confirm-password','auth.forgot-password','auth.login',
'auth.register','auth.reset-password','auth.two-factor-challenge','auth.verify-email','components.action-message',
'components.action-section','components.application-logo','components.application-mark','components.authentication-card','components.authentication-card-logo',
'components.banner','components.button','components.checkbox','components.confirmation-modal','components.confirms-password',
'components.danger-button','components.dialog-modal','components.dropdown','components.dropdown-link','components.form-section',
'components.input','components.input-error','components.label','components.modal','components.nav-link',
'components.responsive-nav-link','components.secondary-button','components.section-border','components.section-title','components.switchable-team',
'components.validation-errors','components.welcome','dashboard','emails.team-invitation','emails.welcome',
'layouts.app','layouts.guest','navigation-menu','policy','profile.delete-user-form',
'profile.logout-other-browser-sessions-form','profile.show','profile.two-factor-authentication-form','profile.update-password-form','profile.update-profile-information-form',
'terms','welcome','laravel-exceptions-renderer::components.card','laravel-exceptions-renderer::components.context','laravel-exceptions-renderer::components.editor',
'laravel-exceptions-renderer::components.header','laravel-exceptions-renderer::components.icons.chevron-down','laravel-exceptions-renderer::components.icons.chevron-up','laravel-exceptions-renderer::components.icons.computer-desktop','laravel-exceptions-renderer::components.icons.moon',
'laravel-exceptions-renderer::components.icons.sun','laravel-exceptions-renderer::components.layout','laravel-exceptions-renderer::components.navigation','laravel-exceptions-renderer::components.theme-switcher','laravel-exceptions-renderer::components.trace',
'laravel-exceptions-renderer::components.trace-and-editor','laravel-exceptions-renderer::show','laravel-exceptions::401','laravel-exceptions::402','laravel-exceptions::403',
'laravel-exceptions::404','laravel-exceptions::419','laravel-exceptions::429','laravel-exceptions::500','laravel-exceptions::503',
'laravel-exceptions::layout','laravel-exceptions::minimal','livewire::bootstrap','livewire::simple-bootstrap','livewire::simple-tailwind',
'livewire::tailwind','notifications::email','pagination::bootstrap-4','pagination::bootstrap-5','pagination::default',
'pagination::semantic-ui','pagination::simple-bootstrap-4','pagination::simple-bootstrap-5','pagination::simple-default','pagination::simple-tailwind',
'pagination::tailwind',);
        registerArgumentsSet('translations', 
'auth.failed','auth.password','auth.throttle','pagination.previous','pagination.next',
'passwords.reset','passwords.sent','passwords.throttled','passwords.token','passwords.user',
'validation.accepted','validation.accepted_if','validation.active_url','validation.after','validation.after_or_equal',
'validation.alpha','validation.alpha_dash','validation.alpha_num','validation.any_of','validation.array',
'validation.ascii','validation.before','validation.before_or_equal','validation.between.array','validation.between.file',
'validation.between.numeric','validation.between.string','validation.boolean','validation.can','validation.confirmed',
'validation.contains','validation.current_password','validation.date','validation.date_equals','validation.date_format',
'validation.decimal','validation.declined','validation.declined_if','validation.different','validation.digits',
'validation.digits_between','validation.dimensions','validation.distinct','validation.doesnt_end_with','validation.doesnt_start_with',
'validation.email','validation.ends_with','validation.enum','validation.exists','validation.extensions',
'validation.file','validation.filled','validation.gt.array','validation.gt.file','validation.gt.numeric',
'validation.gt.string','validation.gte.array','validation.gte.file','validation.gte.numeric','validation.gte.string',
'validation.hex_color','validation.image','validation.in','validation.in_array','validation.in_array_keys',
'validation.integer','validation.ip','validation.ipv4','validation.ipv6','validation.json',
'validation.list','validation.lowercase','validation.lt.array','validation.lt.file','validation.lt.numeric',
'validation.lt.string','validation.lte.array','validation.lte.file','validation.lte.numeric','validation.lte.string',
'validation.mac_address','validation.max.array','validation.max.file','validation.max.numeric','validation.max.string',
'validation.max_digits','validation.mimes','validation.mimetypes','validation.min.array','validation.min.file',
'validation.min.numeric','validation.min.string','validation.min_digits','validation.missing','validation.missing_if',
'validation.missing_unless','validation.missing_with','validation.missing_with_all','validation.multiple_of','validation.not_in',
'validation.not_regex','validation.numeric','validation.password.letters','validation.password.mixed','validation.password.numbers',
'validation.password.symbols','validation.password.uncompromised','validation.present','validation.present_if','validation.present_unless',
'validation.present_with','validation.present_with_all','validation.prohibited','validation.prohibited_if','validation.prohibited_if_accepted',
'validation.prohibited_if_declined','validation.prohibited_unless','validation.prohibits','validation.regex','validation.required',
'validation.required_array_keys','validation.required_if','validation.required_if_accepted','validation.required_if_declined','validation.required_unless',
'validation.required_with','validation.required_with_all','validation.required_without','validation.required_without_all','validation.same',
'validation.size.array','validation.size.file','validation.size.numeric','validation.size.string','validation.starts_with',
'validation.string','validation.timezone','validation.unique','validation.uploaded','validation.uppercase',
'validation.url','validation.ulid','validation.uuid','validation.custom.attribute-name.rule-name',);
        registerArgumentsSet('env', 
'APP_NAME','APP_ENV','APP_KEY','APP_DEBUG','APP_URL',
'APP_LOCALE','APP_FALLBACK_LOCALE','APP_FAKER_LOCALE','APP_MAINTENANCE_DRIVER','PHP_CLI_SERVER_WORKERS',
'BCRYPT_ROUNDS','LOG_CHANNEL','LOG_STACK','LOG_DEPRECATIONS_CHANNEL','LOG_LEVEL',
'DB_CONNECTION','DB_HOST','DB_PORT','DB_DATABASE','DB_USERNAME',
'DB_PASSWORD','SESSION_DRIVER','SESSION_LIFETIME','SESSION_ENCRYPT','SESSION_PATH',
'SESSION_DOMAIN','BROADCAST_CONNECTION','FILESYSTEM_DISK','QUEUE_CONNECTION','CACHE_STORE',
'MEMCACHED_HOST','REDIS_CLIENT','REDIS_HOST','REDIS_PASSWORD','REDIS_PORT',
'MAIL_MAILER','MAIL_SCHEME','MAIL_HOST','MAIL_PORT','MAIL_USERNAME',
'MAIL_PASSWORD','MAIL_FROM_ADDRESS','MAIL_FROM_NAME','AWS_ACCESS_KEY_ID','AWS_SECRET_ACCESS_KEY',
'AWS_DEFAULT_REGION','AWS_BUCKET','AWS_USE_PATH_STYLE_ENDPOINT','VITE_APP_NAME',);
        
                expectedArguments(\Illuminate\Support\Facades\Gate::has(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::allows(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::denies(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::check(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::any(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::none(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::authorize(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::inspect(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Support\Facades\Route::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cant(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Contracts\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Config\Repository::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::push(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::push(), 0, argumentsSet('configs'));
                expectedArguments(\Illuminate\Support\Facades\Route::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Support\Facades\Route::withoutMiddleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::withoutMiddleware(), 0, argumentsSet('middleware'));
                expectedArguments(\route(), 0, argumentsSet('routes'));
    expectedArguments(\to_route(), 0, argumentsSet('routes'));
    expectedArguments(\signedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\Illuminate\Support\Facades\Redirect::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::temporarySignedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\view(), 0, argumentsSet('views'));
                expectedArguments(\Illuminate\Support\Facades\View::make(), 0, argumentsSet('views'));
    expectedArguments(\Illuminate\View\Factory::make(), 0, argumentsSet('views'));
                expectedArguments(\__(), 0, argumentsSet('translations'));
    expectedArguments(\trans(), 0, argumentsSet('translations'));
                expectedArguments(\Illuminate\Contracts\Translation\Translator::get(), 0, argumentsSet('translations'));
                expectedArguments(\env(), 0, argumentsSet('env'));
                expectedArguments(\Illuminate\Support\Env::get(), 0, argumentsSet('env'));
            
}
